.include "macros.inc"

.section .sbss, "wa"
.balign 0x8
__AXAuxCpuReadWritePosition:
	.skip 0x4
__AXAuxDspReadPosition:
	.skip 0x4
__AXAuxDspWritePosition:
	.skip 0x4
__AXAuxCDspRead:
	.skip 0x4
__AXAuxCDspWrite:
	.skip 0x4
__AXAuxBDspRead:
	.skip 0x4
__AXAuxADspRead:
	.skip 0x4
__AXAuxBDspWrite:
	.skip 0x4
__AXAuxADspWrite:
	.skip 0x4
__AXContextAuxC:
	.skip 0x4
__AXContextAuxB:
	.skip 0x4
__AXContextAuxA:
	.skip 0x4
__AXCallbackAuxC:
	.skip 0x4
__AXCallbackAuxB:
	.skip 0x4
__AXCallbackAuxA:
	.skip 0x4
__clearAuxC:
	.skip 0x4
__clearAuxB:
	.skip 0x4
__clearAuxA:
	.skip 0x4

.section .bss, "wa"
.balign 0x8
__AXBufferAuxA: # ALIGN(32)
	.skip 0x1200
__AXBufferAuxB: # ALIGN(32)
	.skip 0x1200
__AXBufferAuxC: # ALIGN(32)
	.skip 0xD80

.section .text, "ax"
.global __AXAuxInit
__AXAuxInit:
/* 8010495C 000FF85C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 80104960 000FF860  7C 08 02 A6 */	mflr r0
/* 80104964 000FF864  3C C0 80 43 */	lis r6, __AXBufferAuxA@ha
/* 80104968 000FF868  38 A0 00 00 */	li r5, 0
/* 8010496C 000FF86C  90 01 00 14 */	stw r0, 0x14(r1)
/* 80104970 000FF870  38 C6 B1 00 */	addi r6, r6, __AXBufferAuxA@l
/* 80104974 000FF874  38 80 00 01 */	li r4, 1
/* 80104978 000FF878  38 60 00 02 */	li r3, 2
/* 8010497C 000FF87C  38 00 00 20 */	li r0, 0x20
/* 80104980 000FF880  90 AD 9E 28 */	stw r5, __AXCallbackAuxA-_SDA_BASE_(r13)
/* 80104984 000FF884  38 E6 00 00 */	addi r7, r6, 0
/* 80104988 000FF888  39 06 12 00 */	addi r8, r6, 0x1200
/* 8010498C 000FF88C  90 AD 9E 24 */	stw r5, __AXCallbackAuxB-_SDA_BASE_(r13)
/* 80104990 000FF890  38 C6 24 00 */	addi r6, r6, 0x2400
/* 80104994 000FF894  90 AD 9E 20 */	stw r5, __AXCallbackAuxC-_SDA_BASE_(r13)
/* 80104998 000FF898  90 AD 9E 1C */	stw r5, __AXContextAuxA-_SDA_BASE_(r13)
/* 8010499C 000FF89C  90 AD 9E 18 */	stw r5, __AXContextAuxB-_SDA_BASE_(r13)
/* 801049A0 000FF8A0  90 AD 9E 14 */	stw r5, __AXContextAuxC-_SDA_BASE_(r13)
/* 801049A4 000FF8A4  90 AD 9D F8 */	stw r5, __AXAuxDspWritePosition-_SDA_BASE_(r13)
/* 801049A8 000FF8A8  90 8D 9D F4 */	stw r4, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 801049AC 000FF8AC  90 6D 9D F0 */	stw r3, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 801049B0 000FF8B0  7C 09 03 A6 */	mtctr r0
lbl_801049B4:
/* 801049B4 000FF8B4  90 A7 00 00 */	stw r5, 0(r7)
/* 801049B8 000FF8B8  90 A8 00 00 */	stw r5, 0(r8)
/* 801049BC 000FF8BC  90 A6 00 00 */	stw r5, 0(r6)
/* 801049C0 000FF8C0  90 A7 00 04 */	stw r5, 4(r7)
/* 801049C4 000FF8C4  90 A8 00 04 */	stw r5, 4(r8)
/* 801049C8 000FF8C8  90 A6 00 04 */	stw r5, 4(r6)
/* 801049CC 000FF8CC  90 A7 00 08 */	stw r5, 8(r7)
/* 801049D0 000FF8D0  90 A8 00 08 */	stw r5, 8(r8)
/* 801049D4 000FF8D4  90 A6 00 08 */	stw r5, 8(r6)
/* 801049D8 000FF8D8  90 A7 00 0C */	stw r5, 0xc(r7)
/* 801049DC 000FF8DC  90 A8 00 0C */	stw r5, 0xc(r8)
/* 801049E0 000FF8E0  90 A6 00 0C */	stw r5, 0xc(r6)
/* 801049E4 000FF8E4  90 A7 00 10 */	stw r5, 0x10(r7)
/* 801049E8 000FF8E8  90 A8 00 10 */	stw r5, 0x10(r8)
/* 801049EC 000FF8EC  90 A6 00 10 */	stw r5, 0x10(r6)
/* 801049F0 000FF8F0  90 A7 00 14 */	stw r5, 0x14(r7)
/* 801049F4 000FF8F4  90 A8 00 14 */	stw r5, 0x14(r8)
/* 801049F8 000FF8F8  90 A6 00 14 */	stw r5, 0x14(r6)
/* 801049FC 000FF8FC  90 A7 00 18 */	stw r5, 0x18(r7)
/* 80104A00 000FF900  90 A8 00 18 */	stw r5, 0x18(r8)
/* 80104A04 000FF904  90 A6 00 18 */	stw r5, 0x18(r6)
/* 80104A08 000FF908  90 A7 00 1C */	stw r5, 0x1c(r7)
/* 80104A0C 000FF90C  90 A8 00 1C */	stw r5, 0x1c(r8)
/* 80104A10 000FF910  90 A6 00 1C */	stw r5, 0x1c(r6)
/* 80104A14 000FF914  90 A7 00 20 */	stw r5, 0x20(r7)
/* 80104A18 000FF918  38 E7 00 24 */	addi r7, r7, 0x24
/* 80104A1C 000FF91C  90 A8 00 20 */	stw r5, 0x20(r8)
/* 80104A20 000FF920  39 08 00 24 */	addi r8, r8, 0x24
/* 80104A24 000FF924  90 A6 00 20 */	stw r5, 0x20(r6)
/* 80104A28 000FF928  38 C6 00 24 */	addi r6, r6, 0x24
/* 80104A2C 000FF92C  42 00 FF 88 */	bdnz lbl_801049B4
/* 80104A30 000FF930  38 6D 9E 34 */	addi r3, r13, __clearAuxA-_SDA_BASE_
/* 80104A34 000FF934  38 80 00 00 */	li r4, 0
/* 80104A38 000FF938  38 A0 00 03 */	li r5, 3
/* 80104A3C 000FF93C  4B EF F6 C9 */	bl memset
/* 80104A40 000FF940  38 6D 9E 30 */	addi r3, r13, __clearAuxB-_SDA_BASE_
/* 80104A44 000FF944  38 80 00 00 */	li r4, 0
/* 80104A48 000FF948  38 A0 00 03 */	li r5, 3
/* 80104A4C 000FF94C  4B EF F6 B9 */	bl memset
/* 80104A50 000FF950  38 6D 9E 2C */	addi r3, r13, __clearAuxC-_SDA_BASE_
/* 80104A54 000FF954  38 80 00 00 */	li r4, 0
/* 80104A58 000FF958  38 A0 00 03 */	li r5, 3
/* 80104A5C 000FF95C  4B EF F6 A9 */	bl memset
/* 80104A60 000FF960  80 01 00 14 */	lwz r0, 0x14(r1)
/* 80104A64 000FF964  7C 08 03 A6 */	mtlr r0
/* 80104A68 000FF968  38 21 00 10 */	addi r1, r1, 0x10
/* 80104A6C 000FF96C  4E 80 00 20 */	blr 

.global __AXGetAuxAInput
__AXGetAuxAInput:
/* 80104A70 000FF970  80 0D 9E 28 */	lwz r0, __AXCallbackAuxA-_SDA_BASE_(r13)
/* 80104A74 000FF974  2C 00 00 00 */	cmpwi r0, 0
/* 80104A78 000FF978  41 82 00 20 */	beq lbl_80104A98
/* 80104A7C 000FF97C  80 0D 9D F8 */	lwz r0, __AXAuxDspWritePosition-_SDA_BASE_(r13)
/* 80104A80 000FF980  3C 80 80 43 */	lis r4, __AXBufferAuxA@ha
/* 80104A84 000FF984  38 84 B1 00 */	addi r4, r4, __AXBufferAuxA@l
/* 80104A88 000FF988  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104A8C 000FF98C  7C 04 02 14 */	add r0, r4, r0
/* 80104A90 000FF990  90 03 00 00 */	stw r0, 0(r3)
/* 80104A94 000FF994  4E 80 00 20 */	blr 
lbl_80104A98:
/* 80104A98 000FF998  38 00 00 00 */	li r0, 0
/* 80104A9C 000FF99C  90 03 00 00 */	stw r0, 0(r3)
/* 80104AA0 000FF9A0  4E 80 00 20 */	blr 

.global __AXGetAuxAOutput
__AXGetAuxAOutput:
/* 80104AA4 000FF9A4  80 0D 9D F4 */	lwz r0, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104AA8 000FF9A8  3C 80 80 43 */	lis r4, __AXBufferAuxA@ha
/* 80104AAC 000FF9AC  38 84 B1 00 */	addi r4, r4, __AXBufferAuxA@l
/* 80104AB0 000FF9B0  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104AB4 000FF9B4  7C 04 02 14 */	add r0, r4, r0
/* 80104AB8 000FF9B8  90 03 00 00 */	stw r0, 0(r3)
/* 80104ABC 000FF9BC  4E 80 00 20 */	blr 

.global __AXGetAuxAInputDpl2
__AXGetAuxAInputDpl2:
/* 80104AC0 000FF9C0  80 0D 9D F8 */	lwz r0, __AXAuxDspWritePosition-_SDA_BASE_(r13)
/* 80104AC4 000FF9C4  3C 80 80 43 */	lis r4, __AXBufferAuxA@ha
/* 80104AC8 000FF9C8  38 84 B1 00 */	addi r4, r4, __AXBufferAuxA@l
/* 80104ACC 000FF9CC  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104AD0 000FF9D0  7C 84 02 14 */	add r4, r4, r0
/* 80104AD4 000FF9D4  38 04 04 80 */	addi r0, r4, 0x480
/* 80104AD8 000FF9D8  90 03 00 00 */	stw r0, 0(r3)
/* 80104ADC 000FF9DC  4E 80 00 20 */	blr 

.global __AXGetAuxAOutputDpl2R
__AXGetAuxAOutputDpl2R:
/* 80104AE0 000FF9E0  80 0D 9D F4 */	lwz r0, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104AE4 000FF9E4  3C 80 80 43 */	lis r4, __AXBufferAuxA@ha
/* 80104AE8 000FF9E8  38 84 B1 00 */	addi r4, r4, __AXBufferAuxA@l
/* 80104AEC 000FF9EC  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104AF0 000FF9F0  7C 84 02 14 */	add r4, r4, r0
/* 80104AF4 000FF9F4  38 04 01 80 */	addi r0, r4, 0x180
/* 80104AF8 000FF9F8  90 03 00 00 */	stw r0, 0(r3)
/* 80104AFC 000FF9FC  4E 80 00 20 */	blr 

.global __AXGetAuxAOutputDpl2Ls
__AXGetAuxAOutputDpl2Ls:
/* 80104B00 000FFA00  80 0D 9D F4 */	lwz r0, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104B04 000FFA04  3C 80 80 43 */	lis r4, __AXBufferAuxA@ha
/* 80104B08 000FFA08  38 84 B1 00 */	addi r4, r4, __AXBufferAuxA@l
/* 80104B0C 000FFA0C  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104B10 000FFA10  7C 84 02 14 */	add r4, r4, r0
/* 80104B14 000FFA14  38 04 03 00 */	addi r0, r4, 0x300
/* 80104B18 000FFA18  90 03 00 00 */	stw r0, 0(r3)
/* 80104B1C 000FFA1C  4E 80 00 20 */	blr 

.global __AXGetAuxAOutputDpl2Rs
__AXGetAuxAOutputDpl2Rs:
/* 80104B20 000FFA20  80 0D 9D F4 */	lwz r0, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104B24 000FFA24  3C 80 80 43 */	lis r4, __AXBufferAuxA@ha
/* 80104B28 000FFA28  38 84 B1 00 */	addi r4, r4, __AXBufferAuxA@l
/* 80104B2C 000FFA2C  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104B30 000FFA30  7C 84 02 14 */	add r4, r4, r0
/* 80104B34 000FFA34  38 04 04 80 */	addi r0, r4, 0x480
/* 80104B38 000FFA38  90 03 00 00 */	stw r0, 0(r3)
/* 80104B3C 000FFA3C  4E 80 00 20 */	blr 

.global __AXGetAuxBInput
__AXGetAuxBInput:
/* 80104B40 000FFA40  80 0D 9E 24 */	lwz r0, __AXCallbackAuxB-_SDA_BASE_(r13)
/* 80104B44 000FFA44  2C 00 00 00 */	cmpwi r0, 0
/* 80104B48 000FFA48  41 82 00 20 */	beq lbl_80104B68
/* 80104B4C 000FFA4C  80 0D 9D F8 */	lwz r0, __AXAuxDspWritePosition-_SDA_BASE_(r13)
/* 80104B50 000FFA50  3C 80 80 43 */	lis r4, __AXBufferAuxB@ha
/* 80104B54 000FFA54  38 84 C3 00 */	addi r4, r4, __AXBufferAuxB@l
/* 80104B58 000FFA58  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104B5C 000FFA5C  7C 04 02 14 */	add r0, r4, r0
/* 80104B60 000FFA60  90 03 00 00 */	stw r0, 0(r3)
/* 80104B64 000FFA64  4E 80 00 20 */	blr 
lbl_80104B68:
/* 80104B68 000FFA68  38 00 00 00 */	li r0, 0
/* 80104B6C 000FFA6C  90 03 00 00 */	stw r0, 0(r3)
/* 80104B70 000FFA70  4E 80 00 20 */	blr 

.global __AXGetAuxBOutput
__AXGetAuxBOutput:
/* 80104B74 000FFA74  80 0D 9D F4 */	lwz r0, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104B78 000FFA78  3C 80 80 43 */	lis r4, __AXBufferAuxB@ha
/* 80104B7C 000FFA7C  38 84 C3 00 */	addi r4, r4, __AXBufferAuxB@l
/* 80104B80 000FFA80  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104B84 000FFA84  7C 04 02 14 */	add r0, r4, r0
/* 80104B88 000FFA88  90 03 00 00 */	stw r0, 0(r3)
/* 80104B8C 000FFA8C  4E 80 00 20 */	blr 

.global __AXGetAuxBInputDpl2
__AXGetAuxBInputDpl2:
/* 80104B90 000FFA90  80 0D 9D F8 */	lwz r0, __AXAuxDspWritePosition-_SDA_BASE_(r13)
/* 80104B94 000FFA94  3C 80 80 43 */	lis r4, __AXBufferAuxB@ha
/* 80104B98 000FFA98  38 84 C3 00 */	addi r4, r4, __AXBufferAuxB@l
/* 80104B9C 000FFA9C  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104BA0 000FFAA0  7C 84 02 14 */	add r4, r4, r0
/* 80104BA4 000FFAA4  38 04 04 80 */	addi r0, r4, 0x480
/* 80104BA8 000FFAA8  90 03 00 00 */	stw r0, 0(r3)
/* 80104BAC 000FFAAC  4E 80 00 20 */	blr 

.global __AXGetAuxBOutputDpl2R
__AXGetAuxBOutputDpl2R:
/* 80104BB0 000FFAB0  80 0D 9D F4 */	lwz r0, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104BB4 000FFAB4  3C 80 80 43 */	lis r4, __AXBufferAuxB@ha
/* 80104BB8 000FFAB8  38 84 C3 00 */	addi r4, r4, __AXBufferAuxB@l
/* 80104BBC 000FFABC  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104BC0 000FFAC0  7C 84 02 14 */	add r4, r4, r0
/* 80104BC4 000FFAC4  38 04 01 80 */	addi r0, r4, 0x180
/* 80104BC8 000FFAC8  90 03 00 00 */	stw r0, 0(r3)
/* 80104BCC 000FFACC  4E 80 00 20 */	blr 

.global __AXGetAuxBOutputDpl2Ls
__AXGetAuxBOutputDpl2Ls:
/* 80104BD0 000FFAD0  80 0D 9D F4 */	lwz r0, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104BD4 000FFAD4  3C 80 80 43 */	lis r4, __AXBufferAuxB@ha
/* 80104BD8 000FFAD8  38 84 C3 00 */	addi r4, r4, __AXBufferAuxB@l
/* 80104BDC 000FFADC  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104BE0 000FFAE0  7C 84 02 14 */	add r4, r4, r0
/* 80104BE4 000FFAE4  38 04 03 00 */	addi r0, r4, 0x300
/* 80104BE8 000FFAE8  90 03 00 00 */	stw r0, 0(r3)
/* 80104BEC 000FFAEC  4E 80 00 20 */	blr 

.global __AXGetAuxBOutputDpl2Rs
__AXGetAuxBOutputDpl2Rs:
/* 80104BF0 000FFAF0  80 0D 9D F4 */	lwz r0, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104BF4 000FFAF4  3C 80 80 43 */	lis r4, __AXBufferAuxB@ha
/* 80104BF8 000FFAF8  38 84 C3 00 */	addi r4, r4, __AXBufferAuxB@l
/* 80104BFC 000FFAFC  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104C00 000FFB00  7C 84 02 14 */	add r4, r4, r0
/* 80104C04 000FFB04  38 04 04 80 */	addi r0, r4, 0x480
/* 80104C08 000FFB08  90 03 00 00 */	stw r0, 0(r3)
/* 80104C0C 000FFB0C  4E 80 00 20 */	blr 

.global __AXGetAuxCInput
__AXGetAuxCInput:
/* 80104C10 000FFB10  80 0D 9E 20 */	lwz r0, __AXCallbackAuxC-_SDA_BASE_(r13)
/* 80104C14 000FFB14  2C 00 00 00 */	cmpwi r0, 0
/* 80104C18 000FFB18  41 82 00 20 */	beq lbl_80104C38
/* 80104C1C 000FFB1C  80 0D 9D F8 */	lwz r0, __AXAuxDspWritePosition-_SDA_BASE_(r13)
/* 80104C20 000FFB20  3C 80 80 43 */	lis r4, __AXBufferAuxC@ha
/* 80104C24 000FFB24  38 84 D5 00 */	addi r4, r4, __AXBufferAuxC@l
/* 80104C28 000FFB28  1C 00 04 80 */	mulli r0, r0, 0x480
/* 80104C2C 000FFB2C  7C 04 02 14 */	add r0, r4, r0
/* 80104C30 000FFB30  90 03 00 00 */	stw r0, 0(r3)
/* 80104C34 000FFB34  4E 80 00 20 */	blr 
lbl_80104C38:
/* 80104C38 000FFB38  38 00 00 00 */	li r0, 0
/* 80104C3C 000FFB3C  90 03 00 00 */	stw r0, 0(r3)
/* 80104C40 000FFB40  4E 80 00 20 */	blr 

.global __AXGetAuxCOutput
__AXGetAuxCOutput:
/* 80104C44 000FFB44  80 0D 9D F4 */	lwz r0, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104C48 000FFB48  3C 80 80 43 */	lis r4, __AXBufferAuxC@ha
/* 80104C4C 000FFB4C  38 84 D5 00 */	addi r4, r4, __AXBufferAuxC@l
/* 80104C50 000FFB50  1C 00 04 80 */	mulli r0, r0, 0x480
/* 80104C54 000FFB54  7C 04 02 14 */	add r0, r4, r0
/* 80104C58 000FFB58  90 03 00 00 */	stw r0, 0(r3)
/* 80104C5C 000FFB5C  4E 80 00 20 */	blr 

.global __AXProcessAux
__AXProcessAux:
/* 80104C60 000FFB60  94 21 FF A0 */	stwu r1, -0x60(r1)
/* 80104C64 000FFB64  7C 08 02 A6 */	mflr r0
/* 80104C68 000FFB68  90 01 00 64 */	stw r0, 0x64(r1)
/* 80104C6C 000FFB6C  93 E1 00 5C */	stw r31, 0x5c(r1)
/* 80104C70 000FFB70  3F E0 80 43 */	lis r31, __AXBufferAuxA@ha
/* 80104C74 000FFB74  3B FF B1 00 */	addi r31, r31, __AXBufferAuxA@l
/* 80104C78 000FFB78  93 C1 00 58 */	stw r30, 0x58(r1)
/* 80104C7C 000FFB7C  39 5F 00 00 */	addi r10, r31, 0
/* 80104C80 000FFB80  38 DF 12 00 */	addi r6, r31, 0x1200
/* 80104C84 000FFB84  38 BF 24 00 */	addi r5, r31, 0x2400
/* 80104C88 000FFB88  93 A1 00 54 */	stw r29, 0x54(r1)
/* 80104C8C 000FFB8C  80 ED 9D F8 */	lwz r7, __AXAuxDspWritePosition-_SDA_BASE_(r13)
/* 80104C90 000FFB90  81 2D 9D F4 */	lwz r9, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104C94 000FFB94  1C 67 06 00 */	mulli r3, r7, 0x600
/* 80104C98 000FFB98  80 0D 9E 28 */	lwz r0, __AXCallbackAuxA-_SDA_BASE_(r13)
/* 80104C9C 000FFB9C  2C 00 00 00 */	cmpwi r0, 0
/* 80104CA0 000FFBA0  7C 8A 1A 14 */	add r4, r10, r3
/* 80104CA4 000FFBA4  7C 66 1A 14 */	add r3, r6, r3
/* 80104CA8 000FFBA8  90 8D 9E 10 */	stw r4, __AXAuxADspWrite-_SDA_BASE_(r13)
/* 80104CAC 000FFBAC  1D 09 06 00 */	mulli r8, r9, 0x600
/* 80104CB0 000FFBB0  90 6D 9E 08 */	stw r3, __AXAuxADspRead-_SDA_BASE_(r13)
/* 80104CB4 000FFBB4  1C 87 04 80 */	mulli r4, r7, 0x480
/* 80104CB8 000FFBB8  7C EA 42 14 */	add r7, r10, r8
/* 80104CBC 000FFBBC  7C C6 42 14 */	add r6, r6, r8
/* 80104CC0 000FFBC0  90 ED 9E 0C */	stw r7, __AXAuxBDspWrite-_SDA_BASE_(r13)
/* 80104CC4 000FFBC4  1C 69 04 80 */	mulli r3, r9, 0x480
/* 80104CC8 000FFBC8  7C 85 22 14 */	add r4, r5, r4
/* 80104CCC 000FFBCC  90 CD 9E 04 */	stw r6, __AXAuxBDspRead-_SDA_BASE_(r13)
/* 80104CD0 000FFBD0  7C 05 1A 14 */	add r0, r5, r3
/* 80104CD4 000FFBD4  90 8D 9E 00 */	stw r4, __AXAuxCDspWrite-_SDA_BASE_(r13)
/* 80104CD8 000FFBD8  90 0D 9D FC */	stw r0, __AXAuxCDspRead-_SDA_BASE_(r13)
/* 80104CDC 000FFBDC  41 82 00 B0 */	beq lbl_80104D8C
/* 80104CE0 000FFBE0  80 0D 9E 48 */	lwz r0, __AXClMode-_SDA_BASE_(r13)
/* 80104CE4 000FFBE4  28 00 00 02 */	cmplwi r0, 2
/* 80104CE8 000FFBE8  40 82 00 58 */	bne lbl_80104D40
/* 80104CEC 000FFBEC  80 0D 9D F0 */	lwz r0, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104CF0 000FFBF0  38 80 06 00 */	li r4, 0x600
/* 80104CF4 000FFBF4  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104CF8 000FFBF8  7C 6A 02 14 */	add r3, r10, r0
/* 80104CFC 000FFBFC  38 C3 01 80 */	addi r6, r3, 0x180
/* 80104D00 000FFC00  90 61 00 40 */	stw r3, 0x40(r1)
/* 80104D04 000FFC04  38 A3 03 00 */	addi r5, r3, 0x300
/* 80104D08 000FFC08  38 03 04 80 */	addi r0, r3, 0x480
/* 80104D0C 000FFC0C  90 C1 00 44 */	stw r6, 0x44(r1)
/* 80104D10 000FFC10  90 A1 00 48 */	stw r5, 0x48(r1)
/* 80104D14 000FFC14  90 01 00 4C */	stw r0, 0x4c(r1)
/* 80104D18 000FFC18  4B FE 93 ED */	bl DCInvalidateRange
/* 80104D1C 000FFC1C  81 8D 9E 28 */	lwz r12, __AXCallbackAuxA-_SDA_BASE_(r13)
/* 80104D20 000FFC20  38 61 00 40 */	addi r3, r1, 0x40
/* 80104D24 000FFC24  80 8D 9E 1C */	lwz r4, __AXContextAuxA-_SDA_BASE_(r13)
/* 80104D28 000FFC28  7D 89 03 A6 */	mtctr r12
/* 80104D2C 000FFC2C  4E 80 04 21 */	bctrl 
/* 80104D30 000FFC30  80 61 00 40 */	lwz r3, 0x40(r1)
/* 80104D34 000FFC34  38 80 06 00 */	li r4, 0x600
/* 80104D38 000FFC38  4B FE 94 59 */	bl DCFlushRangeNoSync
/* 80104D3C 000FFC3C  48 00 00 94 */	b lbl_80104DD0
lbl_80104D40:
/* 80104D40 000FFC40  80 0D 9D F0 */	lwz r0, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104D44 000FFC44  38 80 04 80 */	li r4, 0x480
/* 80104D48 000FFC48  1C 00 06 00 */	mulli r0, r0, 0x600
/* 80104D4C 000FFC4C  7C 6A 02 14 */	add r3, r10, r0
/* 80104D50 000FFC50  38 A3 01 80 */	addi r5, r3, 0x180
/* 80104D54 000FFC54  90 61 00 30 */	stw r3, 0x30(r1)
/* 80104D58 000FFC58  38 03 03 00 */	addi r0, r3, 0x300
/* 80104D5C 000FFC5C  90 A1 00 34 */	stw r5, 0x34(r1)
/* 80104D60 000FFC60  90 01 00 38 */	stw r0, 0x38(r1)
/* 80104D64 000FFC64  4B FE 93 A1 */	bl DCInvalidateRange
/* 80104D68 000FFC68  81 8D 9E 28 */	lwz r12, __AXCallbackAuxA-_SDA_BASE_(r13)
/* 80104D6C 000FFC6C  38 61 00 30 */	addi r3, r1, 0x30
/* 80104D70 000FFC70  80 8D 9E 1C */	lwz r4, __AXContextAuxA-_SDA_BASE_(r13)
/* 80104D74 000FFC74  7D 89 03 A6 */	mtctr r12
/* 80104D78 000FFC78  4E 80 04 21 */	bctrl 
/* 80104D7C 000FFC7C  80 61 00 30 */	lwz r3, 0x30(r1)
/* 80104D80 000FFC80  38 80 04 80 */	li r4, 0x480
/* 80104D84 000FFC84  4B FE 94 0D */	bl DCFlushRangeNoSync
/* 80104D88 000FFC88  48 00 00 48 */	b lbl_80104DD0
lbl_80104D8C:
/* 80104D8C 000FFC8C  80 6D 9D F0 */	lwz r3, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104D90 000FFC90  3B CD 9E 34 */	addi r30, r13, __clearAuxA-_SDA_BASE_
/* 80104D94 000FFC94  7C 1E 18 AE */	lbzx r0, r30, r3
/* 80104D98 000FFC98  2C 00 00 00 */	cmpwi r0, 0
/* 80104D9C 000FFC9C  41 82 00 34 */	beq lbl_80104DD0
/* 80104DA0 000FFCA0  1C 03 06 00 */	mulli r0, r3, 0x600
/* 80104DA4 000FFCA4  38 80 00 00 */	li r4, 0
/* 80104DA8 000FFCA8  38 A0 06 00 */	li r5, 0x600
/* 80104DAC 000FFCAC  7F AA 02 14 */	add r29, r10, r0
/* 80104DB0 000FFCB0  7F A3 EB 78 */	mr r3, r29
/* 80104DB4 000FFCB4  4B EF F3 51 */	bl memset
/* 80104DB8 000FFCB8  7F A3 EB 78 */	mr r3, r29
/* 80104DBC 000FFCBC  38 80 06 00 */	li r4, 0x600
/* 80104DC0 000FFCC0  4B FE 93 71 */	bl DCFlushRange
/* 80104DC4 000FFCC4  80 0D 9D F0 */	lwz r0, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104DC8 000FFCC8  38 60 00 00 */	li r3, 0
/* 80104DCC 000FFCCC  7C 7E 01 AE */	stbx r3, r30, r0
lbl_80104DD0:
/* 80104DD0 000FFCD0  80 0D 9E 24 */	lwz r0, __AXCallbackAuxB-_SDA_BASE_(r13)
/* 80104DD4 000FFCD4  2C 00 00 00 */	cmpwi r0, 0
/* 80104DD8 000FFCD8  41 82 00 B8 */	beq lbl_80104E90
/* 80104DDC 000FFCDC  80 0D 9E 48 */	lwz r0, __AXClMode-_SDA_BASE_(r13)
/* 80104DE0 000FFCE0  28 00 00 02 */	cmplwi r0, 2
/* 80104DE4 000FFCE4  40 82 00 5C */	bne lbl_80104E40
/* 80104DE8 000FFCE8  80 6D 9D F0 */	lwz r3, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104DEC 000FFCEC  38 1F 12 00 */	addi r0, r31, 0x1200
/* 80104DF0 000FFCF0  38 80 06 00 */	li r4, 0x600
/* 80104DF4 000FFCF4  1C 63 06 00 */	mulli r3, r3, 0x600
/* 80104DF8 000FFCF8  7C 60 1A 14 */	add r3, r0, r3
/* 80104DFC 000FFCFC  38 C3 01 80 */	addi r6, r3, 0x180
/* 80104E00 000FFD00  90 61 00 20 */	stw r3, 0x20(r1)
/* 80104E04 000FFD04  38 A3 03 00 */	addi r5, r3, 0x300
/* 80104E08 000FFD08  38 03 04 80 */	addi r0, r3, 0x480
/* 80104E0C 000FFD0C  90 C1 00 24 */	stw r6, 0x24(r1)
/* 80104E10 000FFD10  90 A1 00 28 */	stw r5, 0x28(r1)
/* 80104E14 000FFD14  90 01 00 2C */	stw r0, 0x2c(r1)
/* 80104E18 000FFD18  4B FE 92 ED */	bl DCInvalidateRange
/* 80104E1C 000FFD1C  81 8D 9E 24 */	lwz r12, __AXCallbackAuxB-_SDA_BASE_(r13)
/* 80104E20 000FFD20  38 61 00 20 */	addi r3, r1, 0x20
/* 80104E24 000FFD24  80 8D 9E 18 */	lwz r4, __AXContextAuxB-_SDA_BASE_(r13)
/* 80104E28 000FFD28  7D 89 03 A6 */	mtctr r12
/* 80104E2C 000FFD2C  4E 80 04 21 */	bctrl 
/* 80104E30 000FFD30  80 61 00 20 */	lwz r3, 0x20(r1)
/* 80104E34 000FFD34  38 80 06 00 */	li r4, 0x600
/* 80104E38 000FFD38  4B FE 93 59 */	bl DCFlushRangeNoSync
/* 80104E3C 000FFD3C  48 00 00 9C */	b lbl_80104ED8
lbl_80104E40:
/* 80104E40 000FFD40  80 6D 9D F0 */	lwz r3, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104E44 000FFD44  38 1F 12 00 */	addi r0, r31, 0x1200
/* 80104E48 000FFD48  38 80 04 80 */	li r4, 0x480
/* 80104E4C 000FFD4C  1C 63 06 00 */	mulli r3, r3, 0x600
/* 80104E50 000FFD50  7C 60 1A 14 */	add r3, r0, r3
/* 80104E54 000FFD54  38 A3 01 80 */	addi r5, r3, 0x180
/* 80104E58 000FFD58  90 61 00 14 */	stw r3, 0x14(r1)
/* 80104E5C 000FFD5C  38 03 03 00 */	addi r0, r3, 0x300
/* 80104E60 000FFD60  90 A1 00 18 */	stw r5, 0x18(r1)
/* 80104E64 000FFD64  90 01 00 1C */	stw r0, 0x1c(r1)
/* 80104E68 000FFD68  4B FE 92 9D */	bl DCInvalidateRange
/* 80104E6C 000FFD6C  81 8D 9E 24 */	lwz r12, __AXCallbackAuxB-_SDA_BASE_(r13)
/* 80104E70 000FFD70  38 61 00 14 */	addi r3, r1, 0x14
/* 80104E74 000FFD74  80 8D 9E 18 */	lwz r4, __AXContextAuxB-_SDA_BASE_(r13)
/* 80104E78 000FFD78  7D 89 03 A6 */	mtctr r12
/* 80104E7C 000FFD7C  4E 80 04 21 */	bctrl 
/* 80104E80 000FFD80  80 61 00 14 */	lwz r3, 0x14(r1)
/* 80104E84 000FFD84  38 80 04 80 */	li r4, 0x480
/* 80104E88 000FFD88  4B FE 93 09 */	bl DCFlushRangeNoSync
/* 80104E8C 000FFD8C  48 00 00 4C */	b lbl_80104ED8
lbl_80104E90:
/* 80104E90 000FFD90  80 6D 9D F0 */	lwz r3, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104E94 000FFD94  3B CD 9E 30 */	addi r30, r13, __clearAuxB-_SDA_BASE_
/* 80104E98 000FFD98  7C 1E 18 AE */	lbzx r0, r30, r3
/* 80104E9C 000FFD9C  2C 00 00 00 */	cmpwi r0, 0
/* 80104EA0 000FFDA0  41 82 00 38 */	beq lbl_80104ED8
/* 80104EA4 000FFDA4  1C 63 06 00 */	mulli r3, r3, 0x600
/* 80104EA8 000FFDA8  38 1F 12 00 */	addi r0, r31, 0x1200
/* 80104EAC 000FFDAC  38 80 00 00 */	li r4, 0
/* 80104EB0 000FFDB0  38 A0 06 00 */	li r5, 0x600
/* 80104EB4 000FFDB4  7F A0 1A 14 */	add r29, r0, r3
/* 80104EB8 000FFDB8  7F A3 EB 78 */	mr r3, r29
/* 80104EBC 000FFDBC  4B EF F2 49 */	bl memset
/* 80104EC0 000FFDC0  7F A3 EB 78 */	mr r3, r29
/* 80104EC4 000FFDC4  38 80 06 00 */	li r4, 0x600
/* 80104EC8 000FFDC8  4B FE 92 69 */	bl DCFlushRange
/* 80104ECC 000FFDCC  80 0D 9D F0 */	lwz r0, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104ED0 000FFDD0  38 60 00 00 */	li r3, 0
/* 80104ED4 000FFDD4  7C 7E 01 AE */	stbx r3, r30, r0
lbl_80104ED8:
/* 80104ED8 000FFDD8  80 0D 9E 20 */	lwz r0, __AXCallbackAuxC-_SDA_BASE_(r13)
/* 80104EDC 000FFDDC  2C 00 00 00 */	cmpwi r0, 0
/* 80104EE0 000FFDE0  41 82 00 60 */	beq lbl_80104F40
/* 80104EE4 000FFDE4  80 0D 9E 48 */	lwz r0, __AXClMode-_SDA_BASE_(r13)
/* 80104EE8 000FFDE8  28 00 00 02 */	cmplwi r0, 2
/* 80104EEC 000FFDEC  41 82 00 54 */	beq lbl_80104F40
/* 80104EF0 000FFDF0  80 6D 9D F0 */	lwz r3, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104EF4 000FFDF4  38 1F 24 00 */	addi r0, r31, 0x2400
/* 80104EF8 000FFDF8  38 80 04 80 */	li r4, 0x480
/* 80104EFC 000FFDFC  1C 63 04 80 */	mulli r3, r3, 0x480
/* 80104F00 000FFE00  7C 60 1A 14 */	add r3, r0, r3
/* 80104F04 000FFE04  38 A3 01 80 */	addi r5, r3, 0x180
/* 80104F08 000FFE08  90 61 00 08 */	stw r3, 8(r1)
/* 80104F0C 000FFE0C  38 03 03 00 */	addi r0, r3, 0x300
/* 80104F10 000FFE10  90 A1 00 0C */	stw r5, 0xc(r1)
/* 80104F14 000FFE14  90 01 00 10 */	stw r0, 0x10(r1)
/* 80104F18 000FFE18  4B FE 91 ED */	bl DCInvalidateRange
/* 80104F1C 000FFE1C  81 8D 9E 20 */	lwz r12, __AXCallbackAuxC-_SDA_BASE_(r13)
/* 80104F20 000FFE20  38 61 00 08 */	addi r3, r1, 8
/* 80104F24 000FFE24  80 8D 9E 14 */	lwz r4, __AXContextAuxC-_SDA_BASE_(r13)
/* 80104F28 000FFE28  7D 89 03 A6 */	mtctr r12
/* 80104F2C 000FFE2C  4E 80 04 21 */	bctrl 
/* 80104F30 000FFE30  80 61 00 08 */	lwz r3, 8(r1)
/* 80104F34 000FFE34  38 80 04 80 */	li r4, 0x480
/* 80104F38 000FFE38  4B FE 92 59 */	bl DCFlushRangeNoSync
/* 80104F3C 000FFE3C  48 00 00 58 */	b lbl_80104F94
lbl_80104F40:
/* 80104F40 000FFE40  80 0D 9E 20 */	lwz r0, __AXCallbackAuxC-_SDA_BASE_(r13)
/* 80104F44 000FFE44  2C 00 00 00 */	cmpwi r0, 0
/* 80104F48 000FFE48  40 82 00 4C */	bne lbl_80104F94
/* 80104F4C 000FFE4C  80 6D 9D F0 */	lwz r3, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104F50 000FFE50  3B CD 9E 2C */	addi r30, r13, __clearAuxC-_SDA_BASE_
/* 80104F54 000FFE54  7C 1E 18 AE */	lbzx r0, r30, r3
/* 80104F58 000FFE58  2C 00 00 00 */	cmpwi r0, 0
/* 80104F5C 000FFE5C  41 82 00 38 */	beq lbl_80104F94
/* 80104F60 000FFE60  1C 63 04 80 */	mulli r3, r3, 0x480
/* 80104F64 000FFE64  38 1F 24 00 */	addi r0, r31, 0x2400
/* 80104F68 000FFE68  38 80 00 00 */	li r4, 0
/* 80104F6C 000FFE6C  38 A0 04 80 */	li r5, 0x480
/* 80104F70 000FFE70  7F A0 1A 14 */	add r29, r0, r3
/* 80104F74 000FFE74  7F A3 EB 78 */	mr r3, r29
/* 80104F78 000FFE78  4B EF F1 8D */	bl memset
/* 80104F7C 000FFE7C  7F A3 EB 78 */	mr r3, r29
/* 80104F80 000FFE80  38 80 04 80 */	li r4, 0x480
/* 80104F84 000FFE84  4B FE 91 AD */	bl DCFlushRange
/* 80104F88 000FFE88  80 0D 9D F0 */	lwz r0, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104F8C 000FFE8C  38 60 00 00 */	li r3, 0
/* 80104F90 000FFE90  7C 7E 01 AE */	stbx r3, r30, r0
lbl_80104F94:
/* 80104F94 000FFE94  3C 60 AA AB */	lis r3, 0xAAAAAAAB@ha
/* 80104F98 000FFE98  80 AD 9D F8 */	lwz r5, __AXAuxDspWritePosition-_SDA_BASE_(r13)
/* 80104F9C 000FFE9C  38 03 AA AB */	addi r0, r3, 0xAAAAAAAB@l
/* 80104FA0 000FFEA0  80 6D 9D F0 */	lwz r3, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104FA4 000FFEA4  80 8D 9D F4 */	lwz r4, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104FA8 000FFEA8  38 E5 00 01 */	addi r7, r5, 1
/* 80104FAC 000FFEAC  38 63 00 01 */	addi r3, r3, 1
/* 80104FB0 000FFEB0  38 A4 00 01 */	addi r5, r4, 1
/* 80104FB4 000FFEB4  7C C0 38 16 */	mulhwu r6, r0, r7
/* 80104FB8 000FFEB8  7C 80 28 16 */	mulhwu r4, r0, r5
/* 80104FBC 000FFEBC  54 C6 F8 7E */	srwi r6, r6, 1
/* 80104FC0 000FFEC0  7C 00 18 16 */	mulhwu r0, r0, r3
/* 80104FC4 000FFEC4  54 84 F8 7E */	srwi r4, r4, 1
/* 80104FC8 000FFEC8  1C C6 00 03 */	mulli r6, r6, 3
/* 80104FCC 000FFECC  54 00 F8 7E */	srwi r0, r0, 1
/* 80104FD0 000FFED0  1C 84 00 03 */	mulli r4, r4, 3
/* 80104FD4 000FFED4  7C C6 38 50 */	subf r6, r6, r7
/* 80104FD8 000FFED8  90 CD 9D F8 */	stw r6, __AXAuxDspWritePosition-_SDA_BASE_(r13)
/* 80104FDC 000FFEDC  1C 00 00 03 */	mulli r0, r0, 3
/* 80104FE0 000FFEE0  7C 84 28 50 */	subf r4, r4, r5
/* 80104FE4 000FFEE4  90 8D 9D F4 */	stw r4, __AXAuxDspReadPosition-_SDA_BASE_(r13)
/* 80104FE8 000FFEE8  7C 00 18 50 */	subf r0, r0, r3
/* 80104FEC 000FFEEC  90 0D 9D F0 */	stw r0, __AXAuxCpuReadWritePosition-_SDA_BASE_(r13)
/* 80104FF0 000FFEF0  83 E1 00 5C */	lwz r31, 0x5c(r1)
/* 80104FF4 000FFEF4  83 C1 00 58 */	lwz r30, 0x58(r1)
/* 80104FF8 000FFEF8  83 A1 00 54 */	lwz r29, 0x54(r1)
/* 80104FFC 000FFEFC  80 01 00 64 */	lwz r0, 0x64(r1)
/* 80105000 000FFF00  7C 08 03 A6 */	mtlr r0
/* 80105004 000FFF04  38 21 00 60 */	addi r1, r1, 0x60
/* 80105008 000FFF08  4E 80 00 20 */	blr 

.global AXRegisterAuxACallback
AXRegisterAuxACallback:
/* 8010500C 000FFF0C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 80105010 000FFF10  7C 08 02 A6 */	mflr r0
/* 80105014 000FFF14  90 01 00 14 */	stw r0, 0x14(r1)
/* 80105018 000FFF18  93 E1 00 0C */	stw r31, 0xc(r1)
/* 8010501C 000FFF1C  7C 7F 1B 78 */	mr r31, r3
/* 80105020 000FFF20  93 C1 00 08 */	stw r30, 8(r1)
/* 80105024 000FFF24  7C 9E 23 78 */	mr r30, r4
/* 80105028 000FFF28  4B FE C8 99 */	bl OSDisableInterrupts
/* 8010502C 000FFF2C  2C 1F 00 00 */	cmpwi r31, 0
/* 80105030 000FFF30  93 ED 9E 28 */	stw r31, __AXCallbackAuxA-_SDA_BASE_(r13)
/* 80105034 000FFF34  7C 7F 1B 78 */	mr r31, r3
/* 80105038 000FFF38  93 CD 9E 1C */	stw r30, __AXContextAuxA-_SDA_BASE_(r13)
/* 8010503C 000FFF3C  40 82 00 14 */	bne lbl_80105050
/* 80105040 000FFF40  38 6D 9E 34 */	addi r3, r13, __clearAuxA-_SDA_BASE_
/* 80105044 000FFF44  38 80 00 01 */	li r4, 1
/* 80105048 000FFF48  38 A0 00 03 */	li r5, 3
/* 8010504C 000FFF4C  4B EF F0 B9 */	bl memset
lbl_80105050:
/* 80105050 000FFF50  7F E3 FB 78 */	mr r3, r31
/* 80105054 000FFF54  4B FE C8 95 */	bl OSRestoreInterrupts
/* 80105058 000FFF58  80 01 00 14 */	lwz r0, 0x14(r1)
/* 8010505C 000FFF5C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 80105060 000FFF60  83 C1 00 08 */	lwz r30, 8(r1)
/* 80105064 000FFF64  7C 08 03 A6 */	mtlr r0
/* 80105068 000FFF68  38 21 00 10 */	addi r1, r1, 0x10
/* 8010506C 000FFF6C  4E 80 00 20 */	blr 

.global AXRegisterAuxBCallback
AXRegisterAuxBCallback:
/* 80105070 000FFF70  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 80105074 000FFF74  7C 08 02 A6 */	mflr r0
/* 80105078 000FFF78  90 01 00 14 */	stw r0, 0x14(r1)
/* 8010507C 000FFF7C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 80105080 000FFF80  7C 7F 1B 78 */	mr r31, r3
/* 80105084 000FFF84  93 C1 00 08 */	stw r30, 8(r1)
/* 80105088 000FFF88  7C 9E 23 78 */	mr r30, r4
/* 8010508C 000FFF8C  4B FE C8 35 */	bl OSDisableInterrupts
/* 80105090 000FFF90  2C 1F 00 00 */	cmpwi r31, 0
/* 80105094 000FFF94  93 ED 9E 24 */	stw r31, __AXCallbackAuxB-_SDA_BASE_(r13)
/* 80105098 000FFF98  7C 7F 1B 78 */	mr r31, r3
/* 8010509C 000FFF9C  93 CD 9E 18 */	stw r30, __AXContextAuxB-_SDA_BASE_(r13)
/* 801050A0 000FFFA0  40 82 00 14 */	bne lbl_801050B4
/* 801050A4 000FFFA4  38 6D 9E 30 */	addi r3, r13, __clearAuxB-_SDA_BASE_
/* 801050A8 000FFFA8  38 80 00 01 */	li r4, 1
/* 801050AC 000FFFAC  38 A0 00 03 */	li r5, 3
/* 801050B0 000FFFB0  4B EF F0 55 */	bl memset
lbl_801050B4:
/* 801050B4 000FFFB4  7F E3 FB 78 */	mr r3, r31
/* 801050B8 000FFFB8  4B FE C8 31 */	bl OSRestoreInterrupts
/* 801050BC 000FFFBC  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801050C0 000FFFC0  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801050C4 000FFFC4  83 C1 00 08 */	lwz r30, 8(r1)
/* 801050C8 000FFFC8  7C 08 03 A6 */	mtlr r0
/* 801050CC 000FFFCC  38 21 00 10 */	addi r1, r1, 0x10
/* 801050D0 000FFFD0  4E 80 00 20 */	blr 

.global AXRegisterAuxCCallback
AXRegisterAuxCCallback:
/* 801050D4 000FFFD4  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801050D8 000FFFD8  7C 08 02 A6 */	mflr r0
/* 801050DC 000FFFDC  90 01 00 14 */	stw r0, 0x14(r1)
/* 801050E0 000FFFE0  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801050E4 000FFFE4  7C 7F 1B 78 */	mr r31, r3
/* 801050E8 000FFFE8  93 C1 00 08 */	stw r30, 8(r1)
/* 801050EC 000FFFEC  7C 9E 23 78 */	mr r30, r4
/* 801050F0 000FFFF0  4B FE C7 D1 */	bl OSDisableInterrupts
/* 801050F4 000FFFF4  2C 1F 00 00 */	cmpwi r31, 0
/* 801050F8 000FFFF8  93 ED 9E 20 */	stw r31, __AXCallbackAuxC-_SDA_BASE_(r13)
/* 801050FC 000FFFFC  7C 7F 1B 78 */	mr r31, r3
/* 80105100 00100000  93 CD 9E 14 */	stw r30, __AXContextAuxC-_SDA_BASE_(r13)
/* 80105104 00100004  40 82 00 14 */	bne lbl_80105118
/* 80105108 00100008  38 6D 9E 2C */	addi r3, r13, __clearAuxC-_SDA_BASE_
/* 8010510C 0010000C  38 80 00 01 */	li r4, 1
/* 80105110 00100010  38 A0 00 03 */	li r5, 3
/* 80105114 00100014  4B EF EF F1 */	bl memset
lbl_80105118:
/* 80105118 00100018  7F E3 FB 78 */	mr r3, r31
/* 8010511C 0010001C  4B FE C7 CD */	bl OSRestoreInterrupts
/* 80105120 00100020  80 01 00 14 */	lwz r0, 0x14(r1)
/* 80105124 00100024  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 80105128 00100028  83 C1 00 08 */	lwz r30, 8(r1)
/* 8010512C 0010002C  7C 08 03 A6 */	mtlr r0
/* 80105130 00100030  38 21 00 10 */	addi r1, r1, 0x10
/* 80105134 00100034  4E 80 00 20 */	blr 

.global AXGetAuxACallback
AXGetAuxACallback:
/* 80105138 00100038  80 0D 9E 28 */	lwz r0, __AXCallbackAuxA-_SDA_BASE_(r13)
/* 8010513C 0010003C  90 03 00 00 */	stw r0, 0(r3)
/* 80105140 00100040  80 0D 9E 1C */	lwz r0, __AXContextAuxA-_SDA_BASE_(r13)
/* 80105144 00100044  90 04 00 00 */	stw r0, 0(r4)
/* 80105148 00100048  4E 80 00 20 */	blr 

.global AXGetAuxBCallback
AXGetAuxBCallback:
/* 8010514C 0010004C  80 0D 9E 24 */	lwz r0, __AXCallbackAuxB-_SDA_BASE_(r13)
/* 80105150 00100050  90 03 00 00 */	stw r0, 0(r3)
/* 80105154 00100054  80 0D 9E 18 */	lwz r0, __AXContextAuxB-_SDA_BASE_(r13)
/* 80105158 00100058  90 04 00 00 */	stw r0, 0(r4)
/* 8010515C 0010005C  4E 80 00 20 */	blr 

.global AXGetAuxCCallback
AXGetAuxCCallback:
/* 80105160 00100060  80 0D 9E 20 */	lwz r0, __AXCallbackAuxC-_SDA_BASE_(r13)
/* 80105164 00100064  90 03 00 00 */	stw r0, 0(r3)
/* 80105168 00100068  80 0D 9E 14 */	lwz r0, __AXContextAuxC-_SDA_BASE_(r13)
/* 8010516C 0010006C  90 04 00 00 */	stw r0, 0(r4)
/* 80105170 00100070  4E 80 00 20 */	blr 
