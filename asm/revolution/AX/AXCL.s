.include "macros.inc"

.section .sbss, "wa"
.balign 0x8
__AXAuxCVolume:
	.skip 0x2
__AXAuxBVolume:
	.skip 0x2
__AXAuxAVolume:
	.skip 0x2
__AXMasterVolume:
	.skip 0x2
__AXCompressor:
	.skip 0x4
__AXCommandListCycles:
	.skip 0x4
.global __AXClMode
__AXClMode:
	.skip 0x4
__AXClWrite:
	.skip 0x4
__AXCommandListPosition:
	.skip 0x4

.section .bss, "wa"
.balign 0x8
__AXCommandList:
	.skip 0x100

.section .text, "ax"
.global __AXGetCommandListCycles
__AXGetCommandListCycles:
/* 80105174 00100074  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105178 00100078  4E 80 00 20 */	blr 

.global __AXGetCommandListAddress
__AXGetCommandListAddress:
/* 8010517C 0010007C  80 8D 9E 50 */	lwz r4, __AXCommandListPosition-_SDA_BASE_(r13)
/* 80105180 00100080  3C A0 80 43 */	lis r5, __AXCommandList@ha
/* 80105184 00100084  38 A5 E2 80 */	addi r5, r5, __AXCommandList@l
/* 80105188 00100088  38 64 00 01 */	addi r3, r4, 1
/* 8010518C 0010008C  54 86 38 30 */	slwi r6, r4, 7
/* 80105190 00100090  54 60 3E 30 */	rlwinm r0, r3, 7, 0x18, 0x18
/* 80105194 00100094  54 64 07 FE */	clrlwi r4, r3, 0x1f
/* 80105198 00100098  7C 65 32 14 */	add r3, r5, r6
/* 8010519C 0010009C  7C 05 02 14 */	add r0, r5, r0
/* 801051A0 001000A0  90 8D 9E 50 */	stw r4, __AXCommandListPosition-_SDA_BASE_(r13)
/* 801051A4 001000A4  90 0D 9E 4C */	stw r0, __AXClWrite-_SDA_BASE_(r13)
/* 801051A8 001000A8  4E 80 00 20 */	blr 

.global __AXNextFrame
__AXNextFrame:
/* 801051AC 001000AC  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801051B0 001000B0  7C 08 02 A6 */	mflr r0
/* 801051B4 001000B4  90 01 00 24 */	stw r0, 0x24(r1)
/* 801051B8 001000B8  38 00 1E 83 */	li r0, 0x1e83
/* 801051BC 001000BC  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801051C0 001000C0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801051C4 001000C4  7C BE 2B 78 */	mr r30, r5
/* 801051C8 001000C8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801051CC 001000CC  7C 9D 23 78 */	mr r29, r4
/* 801051D0 001000D0  93 81 00 10 */	stw r28, 0x10(r1)
/* 801051D4 001000D4  7C 7C 1B 78 */	mr r28, r3
/* 801051D8 001000D8  83 ED 9E 4C */	lwz r31, __AXClWrite-_SDA_BASE_(r13)
/* 801051DC 001000DC  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
/* 801051E0 001000E0  48 00 12 0D */	bl __AXGetStudio
/* 801051E4 001000E4  90 61 00 08 */	stw r3, 8(r1)
/* 801051E8 001000E8  38 00 00 00 */	li r0, 0
/* 801051EC 001000EC  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801051F0 001000F0  B0 03 00 00 */	sth r0, 0(r3)
/* 801051F4 001000F4  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801051F8 001000F8  80 01 00 08 */	lwz r0, 8(r1)
/* 801051FC 001000FC  38 63 00 02 */	addi r3, r3, 2
/* 80105200 00100100  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105204 00100104  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105208 00100108  B0 03 00 00 */	sth r0, 0(r3)
/* 8010520C 0010010C  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105210 00100110  80 01 00 08 */	lwz r0, 8(r1)
/* 80105214 00100114  38 63 00 02 */	addi r3, r3, 2
/* 80105218 00100118  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 8010521C 0010011C  B0 03 00 00 */	sth r0, 0(r3)
/* 80105220 00100120  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105224 00100124  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105228 00100128  80 0D 9E 48 */	lwz r0, __AXClMode-_SDA_BASE_(r13)
/* 8010522C 0010012C  38 84 00 02 */	addi r4, r4, 2
/* 80105230 00100130  38 63 10 1E */	addi r3, r3, 0x101e
/* 80105234 00100134  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105238 00100138  2C 00 00 01 */	cmpwi r0, 1
/* 8010523C 0010013C  90 6D 9E 44 */	stw r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105240 00100140  41 82 00 68 */	beq lbl_801052A8
/* 80105244 00100144  40 80 00 10 */	bge lbl_80105254
/* 80105248 00100148  2C 00 00 00 */	cmpwi r0, 0
/* 8010524C 0010014C  40 80 00 14 */	bge lbl_80105260
/* 80105250 00100150  48 00 00 E4 */	b lbl_80105334
lbl_80105254:
/* 80105254 00100154  2C 00 00 03 */	cmpwi r0, 3
/* 80105258 00100158  40 80 00 DC */	bge lbl_80105334
/* 8010525C 0010015C  48 00 00 94 */	b lbl_801052F0
lbl_80105260:
/* 80105260 00100160  38 60 00 01 */	li r3, 1
/* 80105264 00100164  57 80 84 3E */	srwi r0, r28, 0x10
/* 80105268 00100168  B0 64 00 00 */	sth r3, 0(r4)
/* 8010526C 0010016C  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105270 00100170  38 63 00 02 */	addi r3, r3, 2
/* 80105274 00100174  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105278 00100178  B0 03 00 00 */	sth r0, 0(r3)
/* 8010527C 0010017C  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105280 00100180  38 63 00 02 */	addi r3, r3, 2
/* 80105284 00100184  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105288 00100188  B3 83 00 00 */	sth r28, 0(r3)
/* 8010528C 0010018C  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105290 00100190  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105294 00100194  38 A4 00 02 */	addi r5, r4, 2
/* 80105298 00100198  38 03 02 DD */	addi r0, r3, 0x2dd
/* 8010529C 0010019C  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801052A0 001001A0  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
/* 801052A4 001001A4  48 00 00 90 */	b lbl_80105334
lbl_801052A8:
/* 801052A8 001001A8  38 60 00 02 */	li r3, 2
/* 801052AC 001001AC  57 80 84 3E */	srwi r0, r28, 0x10
/* 801052B0 001001B0  B0 64 00 00 */	sth r3, 0(r4)
/* 801052B4 001001B4  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801052B8 001001B8  38 63 00 02 */	addi r3, r3, 2
/* 801052BC 001001BC  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 801052C0 001001C0  B0 03 00 00 */	sth r0, 0(r3)
/* 801052C4 001001C4  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801052C8 001001C8  38 63 00 02 */	addi r3, r3, 2
/* 801052CC 001001CC  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 801052D0 001001D0  B3 83 00 00 */	sth r28, 0(r3)
/* 801052D4 001001D4  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801052D8 001001D8  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 801052DC 001001DC  38 A4 00 02 */	addi r5, r4, 2
/* 801052E0 001001E0  38 03 03 3D */	addi r0, r3, 0x33d
/* 801052E4 001001E4  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801052E8 001001E8  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
/* 801052EC 001001EC  48 00 00 48 */	b lbl_80105334
lbl_801052F0:
/* 801052F0 001001F0  38 60 00 03 */	li r3, 3
/* 801052F4 001001F4  57 80 84 3E */	srwi r0, r28, 0x10
/* 801052F8 001001F8  B0 64 00 00 */	sth r3, 0(r4)
/* 801052FC 001001FC  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105300 00100200  38 63 00 02 */	addi r3, r3, 2
/* 80105304 00100204  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105308 00100208  B0 03 00 00 */	sth r0, 0(r3)
/* 8010530C 0010020C  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105310 00100210  38 63 00 02 */	addi r3, r3, 2
/* 80105314 00100214  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105318 00100218  B3 83 00 00 */	sth r28, 0(r3)
/* 8010531C 0010021C  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105320 00100220  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105324 00100224  38 A4 00 02 */	addi r5, r4, 2
/* 80105328 00100228  38 03 03 9D */	addi r0, r3, 0x39d
/* 8010532C 0010022C  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105330 00100230  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
lbl_80105334:
/* 80105334 00100234  48 00 1D 41 */	bl __AXGetPBs
/* 80105338 00100238  90 61 00 08 */	stw r3, 8(r1)
/* 8010533C 0010023C  38 00 00 04 */	li r0, 4
/* 80105340 00100240  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105344 00100244  B0 03 00 00 */	sth r0, 0(r3)
/* 80105348 00100248  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 8010534C 0010024C  80 01 00 08 */	lwz r0, 8(r1)
/* 80105350 00100250  38 63 00 02 */	addi r3, r3, 2
/* 80105354 00100254  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105358 00100258  54 00 84 3E */	srwi r0, r0, 0x10
/* 8010535C 0010025C  B0 03 00 00 */	sth r0, 0(r3)
/* 80105360 00100260  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105364 00100264  80 01 00 08 */	lwz r0, 8(r1)
/* 80105368 00100268  38 63 00 02 */	addi r3, r3, 2
/* 8010536C 0010026C  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105370 00100270  B0 03 00 00 */	sth r0, 0(r3)
/* 80105374 00100274  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105378 00100278  80 0D 9E 48 */	lwz r0, __AXClMode-_SDA_BASE_(r13)
/* 8010537C 0010027C  38 A3 00 02 */	addi r5, r3, 2
/* 80105380 00100280  28 00 00 02 */	cmplwi r0, 2
/* 80105384 00100284  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105388 00100288  40 82 03 28 */	bne lbl_801056B0
/* 8010538C 0010028C  38 61 00 08 */	addi r3, r1, 8
/* 80105390 00100290  4B FF F6 E1 */	bl __AXGetAuxAInput
/* 80105394 00100294  80 01 00 08 */	lwz r0, 8(r1)
/* 80105398 00100298  2C 00 00 00 */	cmpwi r0, 0
/* 8010539C 0010029C  41 82 01 80 */	beq lbl_8010551C
/* 801053A0 001002A0  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801053A4 001002A4  38 00 00 08 */	li r0, 8
/* 801053A8 001002A8  38 61 00 08 */	addi r3, r1, 8
/* 801053AC 001002AC  B0 04 00 00 */	sth r0, 0(r4)
/* 801053B0 001002B0  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801053B4 001002B4  A0 0D 9E 3C */	lhz r0, __AXAuxAVolume-_SDA_BASE_(r13)
/* 801053B8 001002B8  38 84 00 02 */	addi r4, r4, 2
/* 801053BC 001002BC  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 801053C0 001002C0  B0 04 00 00 */	sth r0, 0(r4)
/* 801053C4 001002C4  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801053C8 001002C8  80 01 00 08 */	lwz r0, 8(r1)
/* 801053CC 001002CC  38 84 00 02 */	addi r4, r4, 2
/* 801053D0 001002D0  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 801053D4 001002D4  54 00 84 3E */	srwi r0, r0, 0x10
/* 801053D8 001002D8  B0 04 00 00 */	sth r0, 0(r4)
/* 801053DC 001002DC  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801053E0 001002E0  80 01 00 08 */	lwz r0, 8(r1)
/* 801053E4 001002E4  38 84 00 02 */	addi r4, r4, 2
/* 801053E8 001002E8  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 801053EC 001002EC  B0 04 00 00 */	sth r0, 0(r4)
/* 801053F0 001002F0  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801053F4 001002F4  38 A4 00 02 */	addi r5, r4, 2
/* 801053F8 001002F8  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801053FC 001002FC  4B FF F6 C5 */	bl __AXGetAuxAInputDpl2
/* 80105400 00100300  80 01 00 08 */	lwz r0, 8(r1)
/* 80105404 00100304  38 61 00 08 */	addi r3, r1, 8
/* 80105408 00100308  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010540C 0010030C  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105410 00100310  B0 04 00 00 */	sth r0, 0(r4)
/* 80105414 00100314  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105418 00100318  80 01 00 08 */	lwz r0, 8(r1)
/* 8010541C 0010031C  38 84 00 02 */	addi r4, r4, 2
/* 80105420 00100320  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105424 00100324  B0 04 00 00 */	sth r0, 0(r4)
/* 80105428 00100328  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010542C 0010032C  38 A4 00 02 */	addi r5, r4, 2
/* 80105430 00100330  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105434 00100334  4B FF F6 71 */	bl __AXGetAuxAOutput
/* 80105438 00100338  80 01 00 08 */	lwz r0, 8(r1)
/* 8010543C 0010033C  38 61 00 08 */	addi r3, r1, 8
/* 80105440 00100340  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105444 00100344  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105448 00100348  B0 04 00 00 */	sth r0, 0(r4)
/* 8010544C 0010034C  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105450 00100350  80 01 00 08 */	lwz r0, 8(r1)
/* 80105454 00100354  38 84 00 02 */	addi r4, r4, 2
/* 80105458 00100358  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010545C 0010035C  B0 04 00 00 */	sth r0, 0(r4)
/* 80105460 00100360  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105464 00100364  38 A4 00 02 */	addi r5, r4, 2
/* 80105468 00100368  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 8010546C 0010036C  4B FF F6 75 */	bl __AXGetAuxAOutputDpl2R
/* 80105470 00100370  80 01 00 08 */	lwz r0, 8(r1)
/* 80105474 00100374  38 61 00 08 */	addi r3, r1, 8
/* 80105478 00100378  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010547C 0010037C  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105480 00100380  B0 04 00 00 */	sth r0, 0(r4)
/* 80105484 00100384  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105488 00100388  80 01 00 08 */	lwz r0, 8(r1)
/* 8010548C 0010038C  38 84 00 02 */	addi r4, r4, 2
/* 80105490 00100390  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105494 00100394  B0 04 00 00 */	sth r0, 0(r4)
/* 80105498 00100398  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010549C 0010039C  38 A4 00 02 */	addi r5, r4, 2
/* 801054A0 001003A0  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801054A4 001003A4  4B FF F6 5D */	bl __AXGetAuxAOutputDpl2Ls
/* 801054A8 001003A8  80 01 00 08 */	lwz r0, 8(r1)
/* 801054AC 001003AC  38 61 00 08 */	addi r3, r1, 8
/* 801054B0 001003B0  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801054B4 001003B4  54 00 84 3E */	srwi r0, r0, 0x10
/* 801054B8 001003B8  B0 04 00 00 */	sth r0, 0(r4)
/* 801054BC 001003BC  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801054C0 001003C0  80 01 00 08 */	lwz r0, 8(r1)
/* 801054C4 001003C4  38 84 00 02 */	addi r4, r4, 2
/* 801054C8 001003C8  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 801054CC 001003CC  B0 04 00 00 */	sth r0, 0(r4)
/* 801054D0 001003D0  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801054D4 001003D4  38 A4 00 02 */	addi r5, r4, 2
/* 801054D8 001003D8  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801054DC 001003DC  4B FF F6 45 */	bl __AXGetAuxAOutputDpl2Rs
/* 801054E0 001003E0  80 01 00 08 */	lwz r0, 8(r1)
/* 801054E4 001003E4  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801054E8 001003E8  54 00 84 3E */	srwi r0, r0, 0x10
/* 801054EC 001003EC  B0 03 00 00 */	sth r0, 0(r3)
/* 801054F0 001003F0  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801054F4 001003F4  80 01 00 08 */	lwz r0, 8(r1)
/* 801054F8 001003F8  38 63 00 02 */	addi r3, r3, 2
/* 801054FC 001003FC  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105500 00100400  B0 03 00 00 */	sth r0, 0(r3)
/* 80105504 00100404  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105508 00100408  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 8010550C 0010040C  38 A4 00 02 */	addi r5, r4, 2
/* 80105510 00100410  38 03 0B DC */	addi r0, r3, 0xbdc
/* 80105514 00100414  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105518 00100418  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
lbl_8010551C:
/* 8010551C 0010041C  38 61 00 08 */	addi r3, r1, 8
/* 80105520 00100420  4B FF F6 21 */	bl __AXGetAuxBInput
/* 80105524 00100424  80 01 00 08 */	lwz r0, 8(r1)
/* 80105528 00100428  2C 00 00 00 */	cmpwi r0, 0
/* 8010552C 0010042C  41 82 03 94 */	beq lbl_801058C0
/* 80105530 00100430  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105534 00100434  38 00 00 09 */	li r0, 9
/* 80105538 00100438  38 61 00 08 */	addi r3, r1, 8
/* 8010553C 0010043C  B0 04 00 00 */	sth r0, 0(r4)
/* 80105540 00100440  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105544 00100444  A0 0D 9E 3A */	lhz r0, __AXAuxBVolume-_SDA_BASE_(r13)
/* 80105548 00100448  38 84 00 02 */	addi r4, r4, 2
/* 8010554C 0010044C  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105550 00100450  B0 04 00 00 */	sth r0, 0(r4)
/* 80105554 00100454  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105558 00100458  80 01 00 08 */	lwz r0, 8(r1)
/* 8010555C 0010045C  38 84 00 02 */	addi r4, r4, 2
/* 80105560 00100460  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105564 00100464  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105568 00100468  B0 04 00 00 */	sth r0, 0(r4)
/* 8010556C 0010046C  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105570 00100470  80 01 00 08 */	lwz r0, 8(r1)
/* 80105574 00100474  38 84 00 02 */	addi r4, r4, 2
/* 80105578 00100478  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010557C 0010047C  B0 04 00 00 */	sth r0, 0(r4)
/* 80105580 00100480  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105584 00100484  38 A4 00 02 */	addi r5, r4, 2
/* 80105588 00100488  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 8010558C 0010048C  4B FF F6 05 */	bl __AXGetAuxBInputDpl2
/* 80105590 00100490  80 01 00 08 */	lwz r0, 8(r1)
/* 80105594 00100494  38 61 00 08 */	addi r3, r1, 8
/* 80105598 00100498  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010559C 0010049C  54 00 84 3E */	srwi r0, r0, 0x10
/* 801055A0 001004A0  B0 04 00 00 */	sth r0, 0(r4)
/* 801055A4 001004A4  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801055A8 001004A8  80 01 00 08 */	lwz r0, 8(r1)
/* 801055AC 001004AC  38 84 00 02 */	addi r4, r4, 2
/* 801055B0 001004B0  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 801055B4 001004B4  B0 04 00 00 */	sth r0, 0(r4)
/* 801055B8 001004B8  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801055BC 001004BC  38 A4 00 02 */	addi r5, r4, 2
/* 801055C0 001004C0  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801055C4 001004C4  4B FF F5 B1 */	bl __AXGetAuxBOutput
/* 801055C8 001004C8  80 01 00 08 */	lwz r0, 8(r1)
/* 801055CC 001004CC  38 61 00 08 */	addi r3, r1, 8
/* 801055D0 001004D0  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801055D4 001004D4  54 00 84 3E */	srwi r0, r0, 0x10
/* 801055D8 001004D8  B0 04 00 00 */	sth r0, 0(r4)
/* 801055DC 001004DC  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801055E0 001004E0  80 01 00 08 */	lwz r0, 8(r1)
/* 801055E4 001004E4  38 84 00 02 */	addi r4, r4, 2
/* 801055E8 001004E8  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 801055EC 001004EC  B0 04 00 00 */	sth r0, 0(r4)
/* 801055F0 001004F0  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801055F4 001004F4  38 A4 00 02 */	addi r5, r4, 2
/* 801055F8 001004F8  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801055FC 001004FC  4B FF F5 B5 */	bl __AXGetAuxBOutputDpl2R
/* 80105600 00100500  80 01 00 08 */	lwz r0, 8(r1)
/* 80105604 00100504  38 61 00 08 */	addi r3, r1, 8
/* 80105608 00100508  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010560C 0010050C  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105610 00100510  B0 04 00 00 */	sth r0, 0(r4)
/* 80105614 00100514  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105618 00100518  80 01 00 08 */	lwz r0, 8(r1)
/* 8010561C 0010051C  38 84 00 02 */	addi r4, r4, 2
/* 80105620 00100520  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105624 00100524  B0 04 00 00 */	sth r0, 0(r4)
/* 80105628 00100528  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010562C 0010052C  38 A4 00 02 */	addi r5, r4, 2
/* 80105630 00100530  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105634 00100534  4B FF F5 9D */	bl __AXGetAuxBOutputDpl2Ls
/* 80105638 00100538  80 01 00 08 */	lwz r0, 8(r1)
/* 8010563C 0010053C  38 61 00 08 */	addi r3, r1, 8
/* 80105640 00100540  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105644 00100544  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105648 00100548  B0 04 00 00 */	sth r0, 0(r4)
/* 8010564C 0010054C  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105650 00100550  80 01 00 08 */	lwz r0, 8(r1)
/* 80105654 00100554  38 84 00 02 */	addi r4, r4, 2
/* 80105658 00100558  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010565C 0010055C  B0 04 00 00 */	sth r0, 0(r4)
/* 80105660 00100560  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105664 00100564  38 A4 00 02 */	addi r5, r4, 2
/* 80105668 00100568  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 8010566C 0010056C  4B FF F5 85 */	bl __AXGetAuxBOutputDpl2Rs
/* 80105670 00100570  80 01 00 08 */	lwz r0, 8(r1)
/* 80105674 00100574  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105678 00100578  54 00 84 3E */	srwi r0, r0, 0x10
/* 8010567C 0010057C  B0 03 00 00 */	sth r0, 0(r3)
/* 80105680 00100580  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105684 00100584  80 01 00 08 */	lwz r0, 8(r1)
/* 80105688 00100588  38 63 00 02 */	addi r3, r3, 2
/* 8010568C 0010058C  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105690 00100590  B0 03 00 00 */	sth r0, 0(r3)
/* 80105694 00100594  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105698 00100598  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 8010569C 0010059C  38 A4 00 02 */	addi r5, r4, 2
/* 801056A0 001005A0  38 03 0B DC */	addi r0, r3, 0xbdc
/* 801056A4 001005A4  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801056A8 001005A8  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
/* 801056AC 001005AC  48 00 02 14 */	b lbl_801058C0
lbl_801056B0:
/* 801056B0 001005B0  38 61 00 08 */	addi r3, r1, 8
/* 801056B4 001005B4  4B FF F3 BD */	bl __AXGetAuxAInput
/* 801056B8 001005B8  80 01 00 08 */	lwz r0, 8(r1)
/* 801056BC 001005BC  2C 00 00 00 */	cmpwi r0, 0
/* 801056C0 001005C0  41 82 00 A0 */	beq lbl_80105760
/* 801056C4 001005C4  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801056C8 001005C8  38 00 00 05 */	li r0, 5
/* 801056CC 001005CC  38 61 00 08 */	addi r3, r1, 8
/* 801056D0 001005D0  B0 04 00 00 */	sth r0, 0(r4)
/* 801056D4 001005D4  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801056D8 001005D8  A0 0D 9E 3C */	lhz r0, __AXAuxAVolume-_SDA_BASE_(r13)
/* 801056DC 001005DC  38 84 00 02 */	addi r4, r4, 2
/* 801056E0 001005E0  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 801056E4 001005E4  B0 04 00 00 */	sth r0, 0(r4)
/* 801056E8 001005E8  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801056EC 001005EC  80 01 00 08 */	lwz r0, 8(r1)
/* 801056F0 001005F0  38 84 00 02 */	addi r4, r4, 2
/* 801056F4 001005F4  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 801056F8 001005F8  54 00 84 3E */	srwi r0, r0, 0x10
/* 801056FC 001005FC  B0 04 00 00 */	sth r0, 0(r4)
/* 80105700 00100600  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105704 00100604  80 01 00 08 */	lwz r0, 8(r1)
/* 80105708 00100608  38 84 00 02 */	addi r4, r4, 2
/* 8010570C 0010060C  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105710 00100610  B0 04 00 00 */	sth r0, 0(r4)
/* 80105714 00100614  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105718 00100618  38 A4 00 02 */	addi r5, r4, 2
/* 8010571C 0010061C  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105720 00100620  4B FF F3 85 */	bl __AXGetAuxAOutput
/* 80105724 00100624  80 01 00 08 */	lwz r0, 8(r1)
/* 80105728 00100628  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 8010572C 0010062C  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105730 00100630  B0 03 00 00 */	sth r0, 0(r3)
/* 80105734 00100634  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105738 00100638  80 01 00 08 */	lwz r0, 8(r1)
/* 8010573C 0010063C  38 63 00 02 */	addi r3, r3, 2
/* 80105740 00100640  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105744 00100644  B0 03 00 00 */	sth r0, 0(r3)
/* 80105748 00100648  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010574C 0010064C  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105750 00100650  38 A4 00 02 */	addi r5, r4, 2
/* 80105754 00100654  38 03 08 BB */	addi r0, r3, 0x8bb
/* 80105758 00100658  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 8010575C 0010065C  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
lbl_80105760:
/* 80105760 00100660  38 61 00 08 */	addi r3, r1, 8
/* 80105764 00100664  4B FF F3 DD */	bl __AXGetAuxBInput
/* 80105768 00100668  80 01 00 08 */	lwz r0, 8(r1)
/* 8010576C 0010066C  2C 00 00 00 */	cmpwi r0, 0
/* 80105770 00100670  41 82 00 A0 */	beq lbl_80105810
/* 80105774 00100674  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105778 00100678  38 00 00 06 */	li r0, 6
/* 8010577C 0010067C  38 61 00 08 */	addi r3, r1, 8
/* 80105780 00100680  B0 04 00 00 */	sth r0, 0(r4)
/* 80105784 00100684  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105788 00100688  A0 0D 9E 3A */	lhz r0, __AXAuxBVolume-_SDA_BASE_(r13)
/* 8010578C 0010068C  38 84 00 02 */	addi r4, r4, 2
/* 80105790 00100690  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105794 00100694  B0 04 00 00 */	sth r0, 0(r4)
/* 80105798 00100698  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010579C 0010069C  80 01 00 08 */	lwz r0, 8(r1)
/* 801057A0 001006A0  38 84 00 02 */	addi r4, r4, 2
/* 801057A4 001006A4  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 801057A8 001006A8  54 00 84 3E */	srwi r0, r0, 0x10
/* 801057AC 001006AC  B0 04 00 00 */	sth r0, 0(r4)
/* 801057B0 001006B0  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801057B4 001006B4  80 01 00 08 */	lwz r0, 8(r1)
/* 801057B8 001006B8  38 84 00 02 */	addi r4, r4, 2
/* 801057BC 001006BC  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 801057C0 001006C0  B0 04 00 00 */	sth r0, 0(r4)
/* 801057C4 001006C4  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801057C8 001006C8  38 A4 00 02 */	addi r5, r4, 2
/* 801057CC 001006CC  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801057D0 001006D0  4B FF F3 A5 */	bl __AXGetAuxBOutput
/* 801057D4 001006D4  80 01 00 08 */	lwz r0, 8(r1)
/* 801057D8 001006D8  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801057DC 001006DC  54 00 84 3E */	srwi r0, r0, 0x10
/* 801057E0 001006E0  B0 03 00 00 */	sth r0, 0(r3)
/* 801057E4 001006E4  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801057E8 001006E8  80 01 00 08 */	lwz r0, 8(r1)
/* 801057EC 001006EC  38 63 00 02 */	addi r3, r3, 2
/* 801057F0 001006F0  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 801057F4 001006F4  B0 03 00 00 */	sth r0, 0(r3)
/* 801057F8 001006F8  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801057FC 001006FC  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105800 00100700  38 A4 00 02 */	addi r5, r4, 2
/* 80105804 00100704  38 03 08 BB */	addi r0, r3, 0x8bb
/* 80105808 00100708  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 8010580C 0010070C  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
lbl_80105810:
/* 80105810 00100710  38 61 00 08 */	addi r3, r1, 8
/* 80105814 00100714  4B FF F3 FD */	bl __AXGetAuxCInput
/* 80105818 00100718  80 01 00 08 */	lwz r0, 8(r1)
/* 8010581C 0010071C  2C 00 00 00 */	cmpwi r0, 0
/* 80105820 00100720  41 82 00 A0 */	beq lbl_801058C0
/* 80105824 00100724  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105828 00100728  38 00 00 07 */	li r0, 7
/* 8010582C 0010072C  38 61 00 08 */	addi r3, r1, 8
/* 80105830 00100730  B0 04 00 00 */	sth r0, 0(r4)
/* 80105834 00100734  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105838 00100738  A0 0D 9E 38 */	lhz r0, __AXAuxCVolume-_SDA_BASE_(r13)
/* 8010583C 0010073C  38 84 00 02 */	addi r4, r4, 2
/* 80105840 00100740  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105844 00100744  B0 04 00 00 */	sth r0, 0(r4)
/* 80105848 00100748  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 8010584C 0010074C  80 01 00 08 */	lwz r0, 8(r1)
/* 80105850 00100750  38 84 00 02 */	addi r4, r4, 2
/* 80105854 00100754  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105858 00100758  54 00 84 3E */	srwi r0, r0, 0x10
/* 8010585C 0010075C  B0 04 00 00 */	sth r0, 0(r4)
/* 80105860 00100760  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105864 00100764  80 01 00 08 */	lwz r0, 8(r1)
/* 80105868 00100768  38 84 00 02 */	addi r4, r4, 2
/* 8010586C 0010076C  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105870 00100770  B0 04 00 00 */	sth r0, 0(r4)
/* 80105874 00100774  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105878 00100778  38 A4 00 02 */	addi r5, r4, 2
/* 8010587C 0010077C  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105880 00100780  4B FF F3 C5 */	bl __AXGetAuxCOutput
/* 80105884 00100784  80 01 00 08 */	lwz r0, 8(r1)
/* 80105888 00100788  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 8010588C 0010078C  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105890 00100790  B0 03 00 00 */	sth r0, 0(r3)
/* 80105894 00100794  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105898 00100798  80 01 00 08 */	lwz r0, 8(r1)
/* 8010589C 0010079C  38 63 00 02 */	addi r3, r3, 2
/* 801058A0 001007A0  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 801058A4 001007A4  B0 03 00 00 */	sth r0, 0(r3)
/* 801058A8 001007A8  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 801058AC 001007AC  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 801058B0 001007B0  38 A4 00 02 */	addi r5, r4, 2
/* 801058B4 001007B4  38 03 08 BB */	addi r0, r3, 0x8bb
/* 801058B8 001007B8  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801058BC 001007BC  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
lbl_801058C0:
/* 801058C0 001007C0  80 0D 9E 40 */	lwz r0, __AXCompressor-_SDA_BASE_(r13)
/* 801058C4 001007C4  2C 00 00 00 */	cmpwi r0, 0
/* 801058C8 001007C8  41 82 00 7C */	beq lbl_80105944
/* 801058CC 001007CC  80 AD 9E 4C */	lwz r5, __AXClWrite-_SDA_BASE_(r13)
/* 801058D0 001007D0  38 C0 00 0A */	li r6, 0xa
/* 801058D4 001007D4  3C 60 00 01 */	lis r3, 0x00008000@ha
/* 801058D8 001007D8  3C 80 80 3B */	lis r4, __AXCompressorTable@ha
/* 801058DC 001007DC  B0 C5 00 00 */	sth r6, 0(r5)
/* 801058E0 001007E0  38 84 B8 80 */	addi r4, r4, __AXCompressorTable@l
/* 801058E4 001007E4  38 63 80 00 */	addi r3, r3, 0x00008000@l
/* 801058E8 001007E8  80 AD 9E 4C */	lwz r5, __AXClWrite-_SDA_BASE_(r13)
/* 801058EC 001007EC  54 80 84 3E */	srwi r0, r4, 0x10
/* 801058F0 001007F0  38 A5 00 02 */	addi r5, r5, 2
/* 801058F4 001007F4  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 801058F8 001007F8  B0 65 00 00 */	sth r3, 0(r5)
/* 801058FC 001007FC  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105900 00100800  38 63 00 02 */	addi r3, r3, 2
/* 80105904 00100804  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105908 00100808  B0 C3 00 00 */	sth r6, 0(r3)
/* 8010590C 0010080C  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105910 00100810  38 63 00 02 */	addi r3, r3, 2
/* 80105914 00100814  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105918 00100818  B0 03 00 00 */	sth r0, 0(r3)
/* 8010591C 0010081C  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105920 00100820  38 63 00 02 */	addi r3, r3, 2
/* 80105924 00100824  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105928 00100828  B0 83 00 00 */	sth r4, 0(r3)
/* 8010592C 0010082C  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105930 00100830  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105934 00100834  38 A4 00 02 */	addi r5, r4, 2
/* 80105938 00100838  38 03 07 3A */	addi r0, r3, 0x73a
/* 8010593C 0010083C  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105940 00100840  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
lbl_80105944:
/* 80105944 00100844  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105948 00100848  38 00 00 0D */	li r0, 0xd
/* 8010594C 0010084C  B0 03 00 00 */	sth r0, 0(r3)
/* 80105950 00100850  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105954 00100854  38 63 00 02 */	addi r3, r3, 2
/* 80105958 00100858  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 8010595C 0010085C  80 1E 00 00 */	lwz r0, 0(r30)
/* 80105960 00100860  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105964 00100864  B0 03 00 00 */	sth r0, 0(r3)
/* 80105968 00100868  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 8010596C 0010086C  38 63 00 02 */	addi r3, r3, 2
/* 80105970 00100870  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105974 00100874  80 1E 00 00 */	lwz r0, 0(r30)
/* 80105978 00100878  B0 03 00 00 */	sth r0, 0(r3)
/* 8010597C 0010087C  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105980 00100880  38 63 00 02 */	addi r3, r3, 2
/* 80105984 00100884  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105988 00100888  80 1E 00 04 */	lwz r0, 4(r30)
/* 8010598C 0010088C  54 00 84 3E */	srwi r0, r0, 0x10
/* 80105990 00100890  B0 03 00 00 */	sth r0, 0(r3)
/* 80105994 00100894  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105998 00100898  38 63 00 02 */	addi r3, r3, 2
/* 8010599C 0010089C  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 801059A0 001008A0  80 1E 00 04 */	lwz r0, 4(r30)
/* 801059A4 001008A4  B0 03 00 00 */	sth r0, 0(r3)
/* 801059A8 001008A8  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801059AC 001008AC  38 63 00 02 */	addi r3, r3, 2
/* 801059B0 001008B0  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 801059B4 001008B4  80 1E 00 08 */	lwz r0, 8(r30)
/* 801059B8 001008B8  54 00 84 3E */	srwi r0, r0, 0x10
/* 801059BC 001008BC  B0 03 00 00 */	sth r0, 0(r3)
/* 801059C0 001008C0  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801059C4 001008C4  38 63 00 02 */	addi r3, r3, 2
/* 801059C8 001008C8  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 801059CC 001008CC  80 1E 00 08 */	lwz r0, 8(r30)
/* 801059D0 001008D0  B0 03 00 00 */	sth r0, 0(r3)
/* 801059D4 001008D4  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801059D8 001008D8  38 63 00 02 */	addi r3, r3, 2
/* 801059DC 001008DC  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 801059E0 001008E0  80 1E 00 0C */	lwz r0, 0xc(r30)
/* 801059E4 001008E4  54 00 84 3E */	srwi r0, r0, 0x10
/* 801059E8 001008E8  B0 03 00 00 */	sth r0, 0(r3)
/* 801059EC 001008EC  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 801059F0 001008F0  38 63 00 02 */	addi r3, r3, 2
/* 801059F4 001008F4  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 801059F8 001008F8  80 1E 00 0C */	lwz r0, 0xc(r30)
/* 801059FC 001008FC  B0 03 00 00 */	sth r0, 0(r3)
/* 80105A00 00100900  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105A04 00100904  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105A08 00100908  80 0D 9E 48 */	lwz r0, __AXClMode-_SDA_BASE_(r13)
/* 80105A0C 0010090C  38 84 00 02 */	addi r4, r4, 2
/* 80105A10 00100910  38 63 01 99 */	addi r3, r3, 0x199
/* 80105A14 00100914  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105A18 00100918  28 00 00 02 */	cmplwi r0, 2
/* 80105A1C 0010091C  90 6D 9E 44 */	stw r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105A20 00100920  40 82 00 84 */	bne lbl_80105AA4
/* 80105A24 00100924  38 00 00 0C */	li r0, 0xc
/* 80105A28 00100928  57 83 84 3E */	srwi r3, r28, 0x10
/* 80105A2C 0010092C  B0 04 00 00 */	sth r0, 0(r4)
/* 80105A30 00100930  57 A0 84 3E */	srwi r0, r29, 0x10
/* 80105A34 00100934  80 AD 9E 4C */	lwz r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105A38 00100938  A0 8D 9E 3E */	lhz r4, __AXMasterVolume-_SDA_BASE_(r13)
/* 80105A3C 0010093C  38 A5 00 02 */	addi r5, r5, 2
/* 80105A40 00100940  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105A44 00100944  B0 85 00 00 */	sth r4, 0(r5)
/* 80105A48 00100948  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105A4C 0010094C  38 84 00 02 */	addi r4, r4, 2
/* 80105A50 00100950  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105A54 00100954  B0 64 00 00 */	sth r3, 0(r4)
/* 80105A58 00100958  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105A5C 0010095C  38 63 00 02 */	addi r3, r3, 2
/* 80105A60 00100960  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105A64 00100964  B3 83 00 00 */	sth r28, 0(r3)
/* 80105A68 00100968  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105A6C 0010096C  38 63 00 02 */	addi r3, r3, 2
/* 80105A70 00100970  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105A74 00100974  B0 03 00 00 */	sth r0, 0(r3)
/* 80105A78 00100978  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105A7C 0010097C  38 63 00 02 */	addi r3, r3, 2
/* 80105A80 00100980  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105A84 00100984  B3 A3 00 00 */	sth r29, 0(r3)
/* 80105A88 00100988  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105A8C 0010098C  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105A90 00100990  38 A4 00 02 */	addi r5, r4, 2
/* 80105A94 00100994  38 03 04 AB */	addi r0, r3, 0x4ab
/* 80105A98 00100998  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105A9C 0010099C  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105AA0 001009A0  48 00 00 80 */	b lbl_80105B20
lbl_80105AA4:
/* 80105AA4 001009A4  38 00 00 0B */	li r0, 0xb
/* 80105AA8 001009A8  57 83 84 3E */	srwi r3, r28, 0x10
/* 80105AAC 001009AC  B0 04 00 00 */	sth r0, 0(r4)
/* 80105AB0 001009B0  57 A0 84 3E */	srwi r0, r29, 0x10
/* 80105AB4 001009B4  80 AD 9E 4C */	lwz r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105AB8 001009B8  A0 8D 9E 3E */	lhz r4, __AXMasterVolume-_SDA_BASE_(r13)
/* 80105ABC 001009BC  38 A5 00 02 */	addi r5, r5, 2
/* 80105AC0 001009C0  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105AC4 001009C4  B0 85 00 00 */	sth r4, 0(r5)
/* 80105AC8 001009C8  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105ACC 001009CC  38 84 00 02 */	addi r4, r4, 2
/* 80105AD0 001009D0  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105AD4 001009D4  B0 64 00 00 */	sth r3, 0(r4)
/* 80105AD8 001009D8  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105ADC 001009DC  38 63 00 02 */	addi r3, r3, 2
/* 80105AE0 001009E0  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105AE4 001009E4  B3 83 00 00 */	sth r28, 0(r3)
/* 80105AE8 001009E8  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105AEC 001009EC  38 63 00 02 */	addi r3, r3, 2
/* 80105AF0 001009F0  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105AF4 001009F4  B0 03 00 00 */	sth r0, 0(r3)
/* 80105AF8 001009F8  80 6D 9E 4C */	lwz r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105AFC 001009FC  38 63 00 02 */	addi r3, r3, 2
/* 80105B00 00100A00  90 6D 9E 4C */	stw r3, __AXClWrite-_SDA_BASE_(r13)
/* 80105B04 00100A04  B3 A3 00 00 */	sth r29, 0(r3)
/* 80105B08 00100A08  80 8D 9E 4C */	lwz r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105B0C 00100A0C  80 6D 9E 44 */	lwz r3, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105B10 00100A10  38 A4 00 02 */	addi r5, r4, 2
/* 80105B14 00100A14  38 03 04 94 */	addi r0, r3, 0x494
/* 80105B18 00100A18  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105B1C 00100A1C  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
lbl_80105B20:
/* 80105B20 00100A20  38 00 00 0E */	li r0, 0xe
/* 80105B24 00100A24  7F E3 FB 78 */	mr r3, r31
/* 80105B28 00100A28  B0 05 00 00 */	sth r0, 0(r5)
/* 80105B2C 00100A2C  38 80 00 80 */	li r4, 0x80
/* 80105B30 00100A30  80 AD 9E 4C */	lwz r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105B34 00100A34  80 CD 9E 44 */	lwz r6, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105B38 00100A38  38 A5 00 02 */	addi r5, r5, 2
/* 80105B3C 00100A3C  38 06 00 1E */	addi r0, r6, 0x1e
/* 80105B40 00100A40  90 AD 9E 4C */	stw r5, __AXClWrite-_SDA_BASE_(r13)
/* 80105B44 00100A44  90 0D 9E 44 */	stw r0, __AXCommandListCycles-_SDA_BASE_(r13)
/* 80105B48 00100A48  4B FE 85 E9 */	bl DCFlushRange
/* 80105B4C 00100A4C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 80105B50 00100A50  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 80105B54 00100A54  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 80105B58 00100A58  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 80105B5C 00100A5C  83 81 00 10 */	lwz r28, 0x10(r1)
/* 80105B60 00100A60  7C 08 03 A6 */	mtlr r0
/* 80105B64 00100A64  38 21 00 20 */	addi r1, r1, 0x20
/* 80105B68 00100A68  4E 80 00 20 */	blr 

.global __AXClInit
__AXClInit:
/* 80105B6C 00100A6C  3C 80 80 43 */	lis r4, __AXCommandList@ha
/* 80105B70 00100A70  3C 60 00 01 */	lis r3, 0x00008000@ha
/* 80105B74 00100A74  38 03 80 00 */	addi r0, r3, 0x00008000@l
/* 80105B78 00100A78  38 A0 00 00 */	li r5, 0
/* 80105B7C 00100A7C  38 84 E2 80 */	addi r4, r4, __AXCommandList@l
/* 80105B80 00100A80  38 60 00 01 */	li r3, 1
/* 80105B84 00100A84  90 AD 9E 48 */	stw r5, __AXClMode-_SDA_BASE_(r13)
/* 80105B88 00100A88  90 AD 9E 50 */	stw r5, __AXCommandListPosition-_SDA_BASE_(r13)
/* 80105B8C 00100A8C  90 8D 9E 4C */	stw r4, __AXClWrite-_SDA_BASE_(r13)
/* 80105B90 00100A90  90 6D 9E 40 */	stw r3, __AXCompressor-_SDA_BASE_(r13)
/* 80105B94 00100A94  B0 0D 9E 3E */	sth r0, __AXMasterVolume-_SDA_BASE_(r13)
/* 80105B98 00100A98  B0 0D 9E 3C */	sth r0, __AXAuxAVolume-_SDA_BASE_(r13)
/* 80105B9C 00100A9C  B0 0D 9E 3A */	sth r0, __AXAuxBVolume-_SDA_BASE_(r13)
/* 80105BA0 00100AA0  B0 0D 9E 38 */	sth r0, __AXAuxCVolume-_SDA_BASE_(r13)
/* 80105BA4 00100AA4  4E 80 00 20 */	blr 

.global AXSetMode
AXSetMode:
/* 80105BA8 00100AA8  90 6D 9E 48 */	stw r3, __AXClMode-_SDA_BASE_(r13)
/* 80105BAC 00100AAC  4E 80 00 20 */	blr 

.global AXGetMode
AXGetMode:
/* 80105BB0 00100AB0  80 6D 9E 48 */	lwz r3, __AXClMode-_SDA_BASE_(r13)
/* 80105BB4 00100AB4  4E 80 00 20 */	blr 

.global AXGetAuxAReturnVolume
AXGetAuxAReturnVolume:
/* 80105BB8 00100AB8  A0 6D 9E 3C */	lhz r3, __AXAuxAVolume-_SDA_BASE_(r13)
/* 80105BBC 00100ABC  4E 80 00 20 */	blr 

.global AXGetAuxBReturnVolume
AXGetAuxBReturnVolume:
/* 80105BC0 00100AC0  A0 6D 9E 3A */	lhz r3, __AXAuxBVolume-_SDA_BASE_(r13)
/* 80105BC4 00100AC4  4E 80 00 20 */	blr 

.global AXGetAuxCReturnVolume
AXGetAuxCReturnVolume:
/* 80105BC8 00100AC8  A0 6D 9E 38 */	lhz r3, __AXAuxCVolume-_SDA_BASE_(r13)
/* 80105BCC 00100ACC  4E 80 00 20 */	blr 

.global AXSetMasterVolume
AXSetMasterVolume:
/* 80105BD0 00100AD0  28 03 80 00 */	cmplwi r3, 0x8000
/* 80105BD4 00100AD4  40 81 00 0C */	ble lbl_80105BE0
/* 80105BD8 00100AD8  3C 60 00 01 */	lis r3, 0x00008000@ha
/* 80105BDC 00100ADC  38 63 80 00 */	addi r3, r3, 0x00008000@l
lbl_80105BE0:
/* 80105BE0 00100AE0  B0 6D 9E 3E */	sth r3, __AXMasterVolume-_SDA_BASE_(r13)
/* 80105BE4 00100AE4  4E 80 00 20 */	blr 

.global AXSetAuxAReturnVolume
AXSetAuxAReturnVolume:
/* 80105BE8 00100AE8  B0 6D 9E 3C */	sth r3, __AXAuxAVolume-_SDA_BASE_(r13)
/* 80105BEC 00100AEC  4E 80 00 20 */	blr 

.global AXSetAuxBReturnVolume
AXSetAuxBReturnVolume:
/* 80105BF0 00100AF0  B0 6D 9E 3A */	sth r3, __AXAuxBVolume-_SDA_BASE_(r13)
/* 80105BF4 00100AF4  4E 80 00 20 */	blr 

.global AXSetAuxCReturnVolume
AXSetAuxCReturnVolume:
/* 80105BF8 00100AF8  B0 6D 9E 38 */	sth r3, __AXAuxCVolume-_SDA_BASE_(r13)
/* 80105BFC 00100AFC  4E 80 00 20 */	blr 
