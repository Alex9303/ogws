.include "macros.inc"

.section .sbss, "wa"
.balign 0x8
__AXExceedCallback:
	.skip 0x4
__AXRmtCpuPtr:
	.skip 0x4
__AXRmtDspPtr:
	.skip 0x4
__AXRmtBuffLen:
	.skip 0x4
__AXOutputBufferMode:
	.skip 0x8
__AXOutThreadQueue:
	.skip 0x8
__AXDebugSteppingMode:
	.skip 0x4
__AXDSPDoneFlag:
	.skip 0x4
__AXDSPInitFlag:
	.skip 0x4
__AXUserFrameCallback:
	.skip 0x4
__AXOutDspReady:
	.skip 0x4
__AXAiDmaFrame:
	.skip 0x4
__AXOutFrame:
	.skip 0x8

.section .bss, "wa"
.balign 0x8
.global __AXLocalProfile
__AXLocalProfile:
	.skip 0x38
    .balign 32
__AXRmtOutBuffer: # ALIGN(32)
	.skip 0x5A0
    .balign 32
__AXOutSBuffer: # ALIGN(32)
    .skip 0x300
    .balign 32
__AXOutBuffer: # ALIGN(32)
	.skip 0x480
__AXDSPTask:
	.skip 0x50
    .balign 32
__AXDramImage: # ALIGN(32)
	.skip 0x40

.section .text, "ax"
.global __AXOutNewFrame
__AXOutNewFrame:
/* 80105C00 00100B00  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 80105C04 00100B04  7C 08 02 A6 */	mflr r0
/* 80105C08 00100B08  90 01 00 34 */	stw r0, 0x34(r1)
/* 80105C0C 00100B0C  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 80105C10 00100B10  3F E0 80 43 */	lis r31, __AXLocalProfile@ha
/* 80105C14 00100B14  3B FF E3 80 */	addi r31, r31, __AXLocalProfile@l
/* 80105C18 00100B18  93 C1 00 28 */	stw r30, 0x28(r1)
/* 80105C1C 00100B1C  93 A1 00 24 */	stw r29, 0x24(r1)
/* 80105C20 00100B20  4B FE F9 E5 */	bl OSGetTime
/* 80105C24 00100B24  38 BF 00 00 */	addi r5, r31, 0
/* 80105C28 00100B28  90 7F 00 00 */	stw r3, 0(r31)
/* 80105C2C 00100B2C  90 85 00 04 */	stw r4, 4(r5)
/* 80105C30 00100B30  4B FF DA 41 */	bl AIGetDMABytesLeft
/* 80105C34 00100B34  54 63 F0 BE */	srwi r3, r3, 2
/* 80105C38 00100B38  80 0D 9E 68 */	lwz r0, __AXOutputBufferMode-_SDA_BASE_(r13)
/* 80105C3C 00100B3C  20 63 00 60 */	subfic r3, r3, 0x60
/* 80105C40 00100B40  28 00 00 01 */	cmplwi r0, 1
/* 80105C44 00100B44  1F C3 0E D5 */	mulli r30, r3, 0xed5
/* 80105C48 00100B48  40 82 00 10 */	bne lbl_80105C58
/* 80105C4C 00100B4C  38 60 00 00 */	li r3, 0
/* 80105C50 00100B50  48 00 11 15 */	bl __AXSyncPBs
/* 80105C54 00100B54  48 00 00 0C */	b lbl_80105C60
lbl_80105C58:
/* 80105C58 00100B58  38 60 5F 50 */	li r3, 0x5f50
/* 80105C5C 00100B5C  48 00 11 09 */	bl __AXSyncPBs
lbl_80105C60:
/* 80105C60 00100B60  48 00 08 71 */	bl __AXPrintStudio
/* 80105C64 00100B64  4B FF F5 19 */	bl __AXGetCommandListAddress
/* 80105C68 00100B68  3C 80 BA BE */	lis r4, 0xBABE0080@ha
/* 80105C6C 00100B6C  7C 7D 1B 78 */	mr r29, r3
/* 80105C70 00100B70  38 64 00 80 */	addi r3, r4, 0xBABE0080@l
/* 80105C74 00100B74  48 03 2E C1 */	bl DSPSendMailToDSP
lbl_80105C78:
/* 80105C78 00100B78  48 03 2E 89 */	bl DSPCheckMailToDSP
/* 80105C7C 00100B7C  2C 03 00 00 */	cmpwi r3, 0
/* 80105C80 00100B80  40 82 FF F8 */	bne lbl_80105C78
/* 80105C84 00100B84  7F A3 EB 78 */	mr r3, r29
/* 80105C88 00100B88  48 03 2E AD */	bl DSPSendMailToDSP
lbl_80105C8C:
/* 80105C8C 00100B8C  48 03 2E 75 */	bl DSPCheckMailToDSP
/* 80105C90 00100B90  2C 03 00 00 */	cmpwi r3, 0
/* 80105C94 00100B94  40 82 FF F8 */	bne lbl_80105C8C
/* 80105C98 00100B98  4B FF E8 21 */	bl __AXServiceCallbackStack
/* 80105C9C 00100B9C  4B FE F9 69 */	bl OSGetTime
/* 80105CA0 00100BA0  3B BF 00 00 */	addi r29, r31, 0
/* 80105CA4 00100BA4  90 9D 00 0C */	stw r4, 0xc(r29)
/* 80105CA8 00100BA8  90 7D 00 08 */	stw r3, 8(r29)
/* 80105CAC 00100BAC  4B FF EF B5 */	bl __AXProcessAux
/* 80105CB0 00100BB0  4B FE F9 55 */	bl OSGetTime
/* 80105CB4 00100BB4  90 9D 00 14 */	stw r4, 0x14(r29)
/* 80105CB8 00100BB8  90 7D 00 10 */	stw r3, 0x10(r29)
/* 80105CBC 00100BBC  4B FE F9 49 */	bl OSGetTime
/* 80105CC0 00100BC0  81 8D 9E 84 */	lwz r12, __AXUserFrameCallback-_SDA_BASE_(r13)
/* 80105CC4 00100BC4  90 9D 00 1C */	stw r4, 0x1c(r29)
/* 80105CC8 00100BC8  2C 0C 00 00 */	cmpwi r12, 0
/* 80105CCC 00100BCC  90 7D 00 18 */	stw r3, 0x18(r29)
/* 80105CD0 00100BD0  41 82 00 0C */	beq lbl_80105CDC
/* 80105CD4 00100BD4  7D 89 03 A6 */	mtctr r12
/* 80105CD8 00100BD8  4E 80 04 21 */	bctrl 
lbl_80105CDC:
/* 80105CDC 00100BDC  4B FE F9 29 */	bl OSGetTime
/* 80105CE0 00100BE0  80 ED 9E 60 */	lwz r7, __AXRmtDspPtr-_SDA_BASE_(r13)
/* 80105CE4 00100BE4  39 1F 00 00 */	addi r8, r31, 0
/* 80105CE8 00100BE8  38 BF 00 40 */	addi r5, r31, 0x40
/* 80105CEC 00100BEC  80 0D 9E 64 */	lwz r0, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 80105CF0 00100BF0  54 E6 08 3C */	slwi r6, r7, 1
/* 80105CF4 00100BF4  38 E7 00 12 */	addi r7, r7, 0x12
/* 80105CF8 00100BF8  7C C5 32 14 */	add r6, r5, r6
/* 80105CFC 00100BFC  90 88 00 24 */	stw r4, 0x24(r8)
/* 80105D00 00100C00  38 A6 01 68 */	addi r5, r6, 0x168
/* 80105D04 00100C04  7C 07 00 00 */	cmpw r7, r0
/* 80105D08 00100C08  38 86 02 D0 */	addi r4, r6, 0x2d0
/* 80105D0C 00100C0C  38 06 04 38 */	addi r0, r6, 0x438
/* 80105D10 00100C10  90 68 00 20 */	stw r3, 0x20(r8)
/* 80105D14 00100C14  90 C1 00 08 */	stw r6, 8(r1)
/* 80105D18 00100C18  90 A1 00 0C */	stw r5, 0xc(r1)
/* 80105D1C 00100C1C  90 81 00 10 */	stw r4, 0x10(r1)
/* 80105D20 00100C20  90 01 00 14 */	stw r0, 0x14(r1)
/* 80105D24 00100C24  41 80 00 08 */	blt lbl_80105D2C
/* 80105D28 00100C28  38 E0 00 00 */	li r7, 0
lbl_80105D2C:
/* 80105D2C 00100C2C  80 8D 9E 5C */	lwz r4, __AXRmtCpuPtr-_SDA_BASE_(r13)
/* 80105D30 00100C30  80 6D 9E 60 */	lwz r3, __AXRmtDspPtr-_SDA_BASE_(r13)
/* 80105D34 00100C34  7C 04 18 00 */	cmpw r4, r3
/* 80105D38 00100C38  41 80 00 14 */	blt lbl_80105D4C
/* 80105D3C 00100C3C  38 03 00 12 */	addi r0, r3, 0x12
/* 80105D40 00100C40  7C 04 00 00 */	cmpw r4, r0
/* 80105D44 00100C44  40 80 00 08 */	bge lbl_80105D4C
/* 80105D48 00100C48  90 ED 9E 5C */	stw r7, __AXRmtCpuPtr-_SDA_BASE_(r13)
lbl_80105D4C:
/* 80105D4C 00100C4C  80 0D 9E 90 */	lwz r0, __AXOutFrame-_SDA_BASE_(r13)
/* 80105D50 00100C50  3B BF 08 E0 */	addi r29, r31, 0x8e0
/* 80105D54 00100C54  90 ED 9E 60 */	stw r7, __AXRmtDspPtr-_SDA_BASE_(r13)
/* 80105D58 00100C58  38 7F 05 E0 */	addi r3, r31, 0x5e0
/* 80105D5C 00100C5C  1C 00 01 80 */	mulli r0, r0, 0x180
/* 80105D60 00100C60  38 A1 00 08 */	addi r5, r1, 8
/* 80105D64 00100C64  7C 9D 02 14 */	add r4, r29, r0
/* 80105D68 00100C68  4B FF F4 45 */	bl __AXNextFrame
/* 80105D6C 00100C6C  80 6D 9E 90 */	lwz r3, __AXOutFrame-_SDA_BASE_(r13)
/* 80105D70 00100C70  80 0D 9E 68 */	lwz r0, __AXOutputBufferMode-_SDA_BASE_(r13)
/* 80105D74 00100C74  38 63 00 01 */	addi r3, r3, 1
/* 80105D78 00100C78  28 00 00 01 */	cmplwi r0, 1
/* 80105D7C 00100C7C  90 6D 9E 90 */	stw r3, __AXOutFrame-_SDA_BASE_(r13)
/* 80105D80 00100C80  40 82 00 28 */	bne lbl_80105DA8
/* 80105D84 00100C84  3C 60 AA AB */	lis r3, 0xAAAAAAAB@ha
/* 80105D88 00100C88  80 8D 9E 90 */	lwz r4, __AXOutFrame-_SDA_BASE_(r13)
/* 80105D8C 00100C8C  38 03 AA AB */	addi r0, r3, 0xAAAAAAAB@l
/* 80105D90 00100C90  7C 00 20 16 */	mulhwu r0, r0, r4
/* 80105D94 00100C94  54 00 F8 7E */	srwi r0, r0, 1
/* 80105D98 00100C98  1C 00 00 03 */	mulli r0, r0, 3
/* 80105D9C 00100C9C  7C 00 20 50 */	subf r0, r0, r4
/* 80105DA0 00100CA0  90 0D 9E 90 */	stw r0, __AXOutFrame-_SDA_BASE_(r13)
/* 80105DA4 00100CA4  48 00 00 24 */	b lbl_80105DC8
lbl_80105DA8:
/* 80105DA8 00100CA8  80 0D 9E 90 */	lwz r0, __AXOutFrame-_SDA_BASE_(r13)
/* 80105DAC 00100CAC  38 80 01 80 */	li r4, 0x180
/* 80105DB0 00100CB0  54 00 07 FE */	clrlwi r0, r0, 0x1f
/* 80105DB4 00100CB4  90 0D 9E 90 */	stw r0, __AXOutFrame-_SDA_BASE_(r13)
/* 80105DB8 00100CB8  80 0D 9E 90 */	lwz r0, __AXOutFrame-_SDA_BASE_(r13)
/* 80105DBC 00100CBC  1C 00 01 80 */	mulli r0, r0, 0x180
/* 80105DC0 00100CC0  7C 7D 02 14 */	add r3, r29, r0
/* 80105DC4 00100CC4  4B FF D8 1D */	bl AIInitDMA
lbl_80105DC8:
/* 80105DC8 00100CC8  4B FE F8 3D */	bl OSGetTime
/* 80105DCC 00100CCC  3B BF 00 00 */	addi r29, r31, 0
/* 80105DD0 00100CD0  90 9D 00 2C */	stw r4, 0x2c(r29)
/* 80105DD4 00100CD4  90 7D 00 28 */	stw r3, 0x28(r29)
/* 80105DD8 00100CD8  48 00 0A 35 */	bl __AXGetNumVoices
/* 80105DDC 00100CDC  90 7D 00 30 */	stw r3, 0x30(r29)
/* 80105DE0 00100CE0  48 00 17 C9 */	bl __AXGetCurrentProfile
/* 80105DE4 00100CE4  2C 03 00 00 */	cmpwi r3, 0
/* 80105DE8 00100CE8  41 82 00 58 */	beq lbl_80105E40
/* 80105DEC 00100CEC  38 00 00 07 */	li r0, 7
/* 80105DF0 00100CF0  7C 09 03 A6 */	mtctr r0
lbl_80105DF4:
/* 80105DF4 00100CF4  88 1D 00 00 */	lbz r0, 0(r29)
/* 80105DF8 00100CF8  98 03 00 00 */	stb r0, 0(r3)
/* 80105DFC 00100CFC  88 1D 00 01 */	lbz r0, 1(r29)
/* 80105E00 00100D00  98 03 00 01 */	stb r0, 1(r3)
/* 80105E04 00100D04  88 1D 00 02 */	lbz r0, 2(r29)
/* 80105E08 00100D08  98 03 00 02 */	stb r0, 2(r3)
/* 80105E0C 00100D0C  88 1D 00 03 */	lbz r0, 3(r29)
/* 80105E10 00100D10  98 03 00 03 */	stb r0, 3(r3)
/* 80105E14 00100D14  88 1D 00 04 */	lbz r0, 4(r29)
/* 80105E18 00100D18  98 03 00 04 */	stb r0, 4(r3)
/* 80105E1C 00100D1C  88 1D 00 05 */	lbz r0, 5(r29)
/* 80105E20 00100D20  98 03 00 05 */	stb r0, 5(r3)
/* 80105E24 00100D24  88 1D 00 06 */	lbz r0, 6(r29)
/* 80105E28 00100D28  98 03 00 06 */	stb r0, 6(r3)
/* 80105E2C 00100D2C  88 1D 00 07 */	lbz r0, 7(r29)
/* 80105E30 00100D30  3B BD 00 08 */	addi r29, r29, 8
/* 80105E34 00100D34  98 03 00 07 */	stb r0, 7(r3)
/* 80105E38 00100D38  38 63 00 08 */	addi r3, r3, 8
/* 80105E3C 00100D3C  42 00 FF B8 */	bdnz lbl_80105DF4
lbl_80105E40:
/* 80105E40 00100D40  7F C3 F3 78 */	mr r3, r30
/* 80105E44 00100D44  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 80105E48 00100D48  83 C1 00 28 */	lwz r30, 0x28(r1)
/* 80105E4C 00100D4C  83 A1 00 24 */	lwz r29, 0x24(r1)
/* 80105E50 00100D50  80 01 00 34 */	lwz r0, 0x34(r1)
/* 80105E54 00100D54  7C 08 03 A6 */	mtlr r0
/* 80105E58 00100D58  38 21 00 30 */	addi r1, r1, 0x30
/* 80105E5C 00100D5C  4E 80 00 20 */	blr 

.global __AXOutAiCallback
__AXOutAiCallback:
/* 80105E60 00100D60  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 80105E64 00100D64  7C 08 02 A6 */	mflr r0
/* 80105E68 00100D68  90 01 00 14 */	stw r0, 0x14(r1)
/* 80105E6C 00100D6C  80 0D 9E 88 */	lwz r0, __AXOutDspReady-_SDA_BASE_(r13)
/* 80105E70 00100D70  28 00 00 01 */	cmplwi r0, 1
/* 80105E74 00100D74  40 82 00 14 */	bne lbl_80105E88
/* 80105E78 00100D78  38 00 00 00 */	li r0, 0
/* 80105E7C 00100D7C  90 0D 9E 88 */	stw r0, __AXOutDspReady-_SDA_BASE_(r13)
/* 80105E80 00100D80  4B FF FD 81 */	bl __AXOutNewFrame
/* 80105E84 00100D84  48 00 00 18 */	b lbl_80105E9C
lbl_80105E88:
/* 80105E88 00100D88  38 00 00 02 */	li r0, 2
/* 80105E8C 00100D8C  3C 60 80 43 */	lis r3, __AXDSPTask@ha
/* 80105E90 00100D90  90 0D 9E 88 */	stw r0, __AXOutDspReady-_SDA_BASE_(r13)
/* 80105E94 00100D94  38 63 F0 E0 */	addi r3, r3, __AXDSPTask@l
/* 80105E98 00100D98  48 03 2D E9 */	bl DSPAssertTask
lbl_80105E9C:
/* 80105E9C 00100D9C  80 0D 9E 68 */	lwz r0, __AXOutputBufferMode-_SDA_BASE_(r13)
/* 80105EA0 00100DA0  28 00 00 01 */	cmplwi r0, 1
/* 80105EA4 00100DA4  40 82 00 50 */	bne lbl_80105EF4
/* 80105EA8 00100DA8  80 0D 9E 8C */	lwz r0, __AXAiDmaFrame-_SDA_BASE_(r13)
/* 80105EAC 00100DAC  3C 60 80 43 */	lis r3, __AXOutBuffer@ha
/* 80105EB0 00100DB0  38 63 EC 60 */	addi r3, r3, __AXOutBuffer@l
/* 80105EB4 00100DB4  38 80 01 80 */	li r4, 0x180
/* 80105EB8 00100DB8  1C 00 01 80 */	mulli r0, r0, 0x180
/* 80105EBC 00100DBC  7C 63 02 14 */	add r3, r3, r0
/* 80105EC0 00100DC0  4B FF D7 21 */	bl AIInitDMA
/* 80105EC4 00100DC4  80 8D 9E 8C */	lwz r4, __AXAiDmaFrame-_SDA_BASE_(r13)
/* 80105EC8 00100DC8  3C 60 AA AB */	lis r3, 0xAAAAAAAB@ha
/* 80105ECC 00100DCC  38 63 AA AB */	addi r3, r3, 0xAAAAAAAB@l
/* 80105ED0 00100DD0  80 0D 9E 90 */	lwz r0, __AXOutFrame-_SDA_BASE_(r13)
/* 80105ED4 00100DD4  38 84 00 01 */	addi r4, r4, 1
/* 80105ED8 00100DD8  7C 63 20 16 */	mulhwu r3, r3, r4
/* 80105EDC 00100DDC  54 63 F8 7E */	srwi r3, r3, 1
/* 80105EE0 00100DE0  1C 63 00 03 */	mulli r3, r3, 3
/* 80105EE4 00100DE4  7C 83 20 50 */	subf r4, r3, r4
/* 80105EE8 00100DE8  7C 04 00 40 */	cmplw r4, r0
/* 80105EEC 00100DEC  41 82 00 08 */	beq lbl_80105EF4
/* 80105EF0 00100DF0  90 8D 9E 8C */	stw r4, __AXAiDmaFrame-_SDA_BASE_(r13)
lbl_80105EF4:
/* 80105EF4 00100DF4  80 01 00 14 */	lwz r0, 0x14(r1)
/* 80105EF8 00100DF8  7C 08 03 A6 */	mtlr r0
/* 80105EFC 00100DFC  38 21 00 10 */	addi r1, r1, 0x10
/* 80105F00 00100E00  4E 80 00 20 */	blr 

.global __AXDSPInitCallback
__AXDSPInitCallback:
/* 80105F04 00100E04  38 00 00 01 */	li r0, 1
/* 80105F08 00100E08  90 0D 9E 80 */	stw r0, __AXDSPInitFlag-_SDA_BASE_(r13)
/* 80105F0C 00100E0C  4E 80 00 20 */	blr 

.global __AXDSPResumeCallback
__AXDSPResumeCallback:
/* 80105F10 00100E10  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 80105F14 00100E14  7C 08 02 A6 */	mflr r0
/* 80105F18 00100E18  90 01 00 14 */	stw r0, 0x14(r1)
/* 80105F1C 00100E1C  80 0D 9E 88 */	lwz r0, __AXOutDspReady-_SDA_BASE_(r13)
/* 80105F20 00100E20  28 00 00 02 */	cmplwi r0, 2
/* 80105F24 00100E24  40 82 00 28 */	bne lbl_80105F4C
/* 80105F28 00100E28  38 00 00 00 */	li r0, 0
/* 80105F2C 00100E2C  90 0D 9E 88 */	stw r0, __AXOutDspReady-_SDA_BASE_(r13)
/* 80105F30 00100E30  4B FF FC D1 */	bl __AXOutNewFrame
/* 80105F34 00100E34  81 8D 9E 58 */	lwz r12, __AXExceedCallback-_SDA_BASE_(r13)
/* 80105F38 00100E38  2C 0C 00 00 */	cmpwi r12, 0
/* 80105F3C 00100E3C  41 82 00 18 */	beq lbl_80105F54
/* 80105F40 00100E40  7D 89 03 A6 */	mtctr r12
/* 80105F44 00100E44  4E 80 04 21 */	bctrl 
/* 80105F48 00100E48  48 00 00 0C */	b lbl_80105F54
lbl_80105F4C:
/* 80105F4C 00100E4C  38 00 00 01 */	li r0, 1
/* 80105F50 00100E50  90 0D 9E 88 */	stw r0, __AXOutDspReady-_SDA_BASE_(r13)
lbl_80105F54:
/* 80105F54 00100E54  80 01 00 14 */	lwz r0, 0x14(r1)
/* 80105F58 00100E58  7C 08 03 A6 */	mtlr r0
/* 80105F5C 00100E5C  38 21 00 10 */	addi r1, r1, 0x10
/* 80105F60 00100E60  4E 80 00 20 */	blr 

.global __AXDSPDoneCallback
__AXDSPDoneCallback:
/* 80105F64 00100E64  38 00 00 01 */	li r0, 1
/* 80105F68 00100E68  38 6D 9E 70 */	addi r3, r13, __AXOutThreadQueue-_SDA_BASE_
/* 80105F6C 00100E6C  90 0D 9E 7C */	stw r0, __AXDSPDoneFlag-_SDA_BASE_(r13)
/* 80105F70 00100E70  4B FE F3 DC */	b OSWakeupThread

.global __AXDSPRequestCallback
__AXDSPRequestCallback:
/* 80105F74 00100E74  4E 80 00 20 */	blr 

.global __AXOutInitDSP
__AXOutInitDSP:
/* 80105F78 00100E78  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 80105F7C 00100E7C  7C 08 02 A6 */	mflr r0
/* 80105F80 00100E80  3D 60 80 43 */	lis r11, __AXDramImage@ha
/* 80105F84 00100E84  3C E0 80 10 */	lis r7, __AXDSPInitCallback@ha
/* 80105F88 00100E88  90 01 00 24 */	stw r0, 0x24(r1)
/* 80105F8C 00100E8C  3C C0 80 10 */	lis r6, __AXDSPResumeCallback@ha
/* 80105F90 00100E90  3C A0 80 10 */	lis r5, __AXDSPDoneCallback@ha
/* 80105F94 00100E94  3C 80 80 10 */	lis r4, __AXDSPRequestCallback@ha
/* 80105F98 00100E98  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 80105F9C 00100E9C  39 80 00 00 */	li r12, 0
/* 80105FA0 00100EA0  39 6B F1 40 */	addi r11, r11, __AXDramImage@l
/* 80105FA4 00100EA4  38 E7 5F 04 */	addi r7, r7, __AXDSPInitCallback@l
/* 80105FA8 00100EA8  93 C1 00 18 */	stw r30, 0x18(r1)
/* 80105FAC 00100EAC  3F C0 80 43 */	lis r30, __AXDSPTask@ha
/* 80105FB0 00100EB0  3B DE F0 E0 */	addi r30, r30, __AXDSPTask@l
/* 80105FB4 00100EB4  38 C6 5F 10 */	addi r6, r6, __AXDSPResumeCallback@l
/* 80105FB8 00100EB8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 80105FBC 00100EBC  3F A0 80 3B */	lis r29, axDspSlave@ha
/* 80105FC0 00100EC0  3B BD C8 40 */	addi r29, r29, axDspSlave@l
/* 80105FC4 00100EC4  38 A5 5F 64 */	addi r5, r5, __AXDSPDoneCallback@l
/* 80105FC8 00100EC8  A3 ED 85 24 */	lhz r31, axDspSlaveLength-_SDA_BASE_(r13)
/* 80105FCC 00100ECC  38 84 5F 74 */	addi r4, r4, __AXDSPRequestCallback@l
/* 80105FD0 00100ED0  A1 0D 85 20 */	lhz r8, axDspInitVector-_SDA_BASE_(r13)
/* 80105FD4 00100ED4  39 40 00 40 */	li r10, 0x40
/* 80105FD8 00100ED8  A0 0D 85 22 */	lhz r0, axDspResumeVector-_SDA_BASE_(r13)
/* 80105FDC 00100EDC  39 20 0C D2 */	li r9, 0xcd2
/* 80105FE0 00100EE0  91 9E 00 04 */	stw r12, 4(r30)
/* 80105FE4 00100EE4  38 6D 9E 70 */	addi r3, r13, __AXOutThreadQueue-_SDA_BASE_
/* 80105FE8 00100EE8  91 8D 9E 80 */	stw r12, __AXDSPInitFlag-_SDA_BASE_(r13)
/* 80105FEC 00100EEC  93 BE 00 0C */	stw r29, 0xc(r30)
/* 80105FF0 00100EF0  93 FE 00 10 */	stw r31, 0x10(r30)
/* 80105FF4 00100EF4  91 9E 00 14 */	stw r12, 0x14(r30)
/* 80105FF8 00100EF8  91 7E 00 18 */	stw r11, 0x18(r30)
/* 80105FFC 00100EFC  91 5E 00 1C */	stw r10, 0x1c(r30)
/* 80106000 00100F00  91 3E 00 20 */	stw r9, 0x20(r30)
/* 80106004 00100F04  B1 1E 00 24 */	sth r8, 0x24(r30)
/* 80106008 00100F08  B0 1E 00 26 */	sth r0, 0x26(r30)
/* 8010600C 00100F0C  90 FE 00 28 */	stw r7, 0x28(r30)
/* 80106010 00100F10  90 DE 00 2C */	stw r6, 0x2c(r30)
/* 80106014 00100F14  90 BE 00 30 */	stw r5, 0x30(r30)
/* 80106018 00100F18  90 9E 00 34 */	stw r4, 0x34(r30)
/* 8010601C 00100F1C  91 8D 9E 7C */	stw r12, __AXDSPDoneFlag-_SDA_BASE_(r13)
/* 80106020 00100F20  4B FE E1 29 */	bl OSInitThreadQueue
/* 80106024 00100F24  48 03 2B E5 */	bl DSPCheckInit
/* 80106028 00100F28  2C 03 00 00 */	cmpwi r3, 0
/* 8010602C 00100F2C  40 82 00 08 */	bne lbl_80106034
/* 80106030 00100F30  48 03 2B 19 */	bl DSPInit
lbl_80106034:
/* 80106034 00100F34  3C 60 80 43 */	lis r3, __AXDSPTask@ha
/* 80106038 00100F38  38 63 F0 E0 */	addi r3, r3, __AXDSPTask@l
/* 8010603C 00100F3C  48 03 2B D5 */	bl DSPAddTask
lbl_80106040:
/* 80106040 00100F40  80 0D 9E 80 */	lwz r0, __AXDSPInitFlag-_SDA_BASE_(r13)
/* 80106044 00100F44  2C 00 00 00 */	cmpwi r0, 0
/* 80106048 00100F48  41 82 FF F8 */	beq lbl_80106040
/* 8010604C 00100F4C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 80106050 00100F50  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 80106054 00100F54  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 80106058 00100F58  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 8010605C 00100F5C  7C 08 03 A6 */	mtlr r0
/* 80106060 00100F60  38 21 00 20 */	addi r1, r1, 0x20
/* 80106064 00100F64  4E 80 00 20 */	blr 

.global __AXOutInit
__AXOutInit:
/* 80106068 00100F68  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 8010606C 00100F6C  7C 08 02 A6 */	mflr r0
/* 80106070 00100F70  38 80 00 00 */	li r4, 0
/* 80106074 00100F74  90 01 00 24 */	stw r0, 0x24(r1)
/* 80106078 00100F78  38 00 00 20 */	li r0, 0x20
/* 8010607C 00100F7C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 80106080 00100F80  3F E0 80 43 */	lis r31, __AXLocalProfile@ha
/* 80106084 00100F84  3B FF E3 80 */	addi r31, r31, __AXLocalProfile@l
/* 80106088 00100F88  90 8D 9E 90 */	stw r4, __AXOutFrame-_SDA_BASE_(r13)
/* 8010608C 00100F8C  38 BF 08 E0 */	addi r5, r31, 0x8e0
/* 80106090 00100F90  90 8D 9E 8C */	stw r4, __AXAiDmaFrame-_SDA_BASE_(r13)
/* 80106094 00100F94  90 6D 9E 68 */	stw r3, __AXOutputBufferMode-_SDA_BASE_(r13)
/* 80106098 00100F98  90 8D 9E 78 */	stw r4, __AXDebugSteppingMode-_SDA_BASE_(r13)
/* 8010609C 00100F9C  7C 09 03 A6 */	mtctr r0
lbl_801060A0:
/* 801060A0 00100FA0  90 85 00 00 */	stw r4, 0(r5)
/* 801060A4 00100FA4  90 85 00 04 */	stw r4, 4(r5)
/* 801060A8 00100FA8  90 85 00 08 */	stw r4, 8(r5)
/* 801060AC 00100FAC  90 85 00 0C */	stw r4, 0xc(r5)
/* 801060B0 00100FB0  90 85 00 10 */	stw r4, 0x10(r5)
/* 801060B4 00100FB4  90 85 00 14 */	stw r4, 0x14(r5)
/* 801060B8 00100FB8  90 85 00 18 */	stw r4, 0x18(r5)
/* 801060BC 00100FBC  90 85 00 1C */	stw r4, 0x1c(r5)
/* 801060C0 00100FC0  90 85 00 20 */	stw r4, 0x20(r5)
/* 801060C4 00100FC4  38 A5 00 24 */	addi r5, r5, 0x24
/* 801060C8 00100FC8  42 00 FF D8 */	bdnz lbl_801060A0
/* 801060CC 00100FCC  38 7F 08 E0 */	addi r3, r31, 0x8e0
/* 801060D0 00100FD0  38 80 04 80 */	li r4, 0x480
/* 801060D4 00100FD4  4B FE 80 5D */	bl DCFlushRange
/* 801060D8 00100FD8  38 00 00 18 */	li r0, 0x18
/* 801060DC 00100FDC  38 9F 05 E0 */	addi r4, r31, 0x5e0
/* 801060E0 00100FE0  38 60 00 00 */	li r3, 0
/* 801060E4 00100FE4  7C 09 03 A6 */	mtctr r0
lbl_801060E8:
/* 801060E8 00100FE8  90 64 00 00 */	stw r3, 0(r4)
/* 801060EC 00100FEC  90 64 00 04 */	stw r3, 4(r4)
/* 801060F0 00100FF0  90 64 00 08 */	stw r3, 8(r4)
/* 801060F4 00100FF4  90 64 00 0C */	stw r3, 0xc(r4)
/* 801060F8 00100FF8  90 64 00 10 */	stw r3, 0x10(r4)
/* 801060FC 00100FFC  90 64 00 14 */	stw r3, 0x14(r4)
/* 80106100 00101000  90 64 00 18 */	stw r3, 0x18(r4)
/* 80106104 00101004  90 64 00 1C */	stw r3, 0x1c(r4)
/* 80106108 00101008  38 84 00 20 */	addi r4, r4, 0x20
/* 8010610C 0010100C  42 00 FF DC */	bdnz lbl_801060E8
/* 80106110 00101010  38 7F 05 E0 */	addi r3, r31, 0x5e0
/* 80106114 00101014  38 80 03 00 */	li r4, 0x300
/* 80106118 00101018  4B FE 80 19 */	bl DCFlushRange
/* 8010611C 0010101C  38 00 00 24 */	li r0, 0x24
/* 80106120 00101020  38 9F 00 40 */	addi r4, r31, 0x40
/* 80106124 00101024  38 60 00 00 */	li r3, 0
/* 80106128 00101028  7C 09 03 A6 */	mtctr r0
lbl_8010612C:
/* 8010612C 0010102C  90 64 00 00 */	stw r3, 0(r4)
/* 80106130 00101030  90 64 00 04 */	stw r3, 4(r4)
/* 80106134 00101034  90 64 00 08 */	stw r3, 8(r4)
/* 80106138 00101038  90 64 00 0C */	stw r3, 0xc(r4)
/* 8010613C 0010103C  90 64 00 10 */	stw r3, 0x10(r4)
/* 80106140 00101040  90 64 00 14 */	stw r3, 0x14(r4)
/* 80106144 00101044  90 64 00 18 */	stw r3, 0x18(r4)
/* 80106148 00101048  90 64 00 1C */	stw r3, 0x1c(r4)
/* 8010614C 0010104C  90 64 00 20 */	stw r3, 0x20(r4)
/* 80106150 00101050  90 64 00 24 */	stw r3, 0x24(r4)
/* 80106154 00101054  38 84 00 28 */	addi r4, r4, 0x28
/* 80106158 00101058  42 00 FF D4 */	bdnz lbl_8010612C
/* 8010615C 0010105C  38 7F 00 40 */	addi r3, r31, 0x40
/* 80106160 00101060  38 80 05 A0 */	li r4, 0x5a0
/* 80106164 00101064  4B FE 7F CD */	bl DCFlushRange
/* 80106168 00101068  4B FF FE 11 */	bl __AXOutInitDSP
/* 8010616C 0010106C  3C 60 80 10 */	lis r3, __AXOutAiCallback@ha
/* 80106170 00101070  38 63 5E 60 */	addi r3, r3, __AXOutAiCallback@l
/* 80106174 00101074  4B FF D4 29 */	bl AIRegisterDMACallback
/* 80106178 00101078  80 0D 9E 68 */	lwz r0, __AXOutputBufferMode-_SDA_BASE_(r13)
/* 8010617C 0010107C  39 1F 00 40 */	addi r8, r31, 0x40
/* 80106180 00101080  38 80 00 12 */	li r4, 0x12
/* 80106184 00101084  38 60 00 B4 */	li r3, 0xb4
/* 80106188 00101088  38 E8 01 68 */	addi r7, r8, 0x168
/* 8010618C 0010108C  38 C8 02 D0 */	addi r6, r8, 0x2d0
/* 80106190 00101090  38 A8 04 38 */	addi r5, r8, 0x438
/* 80106194 00101094  28 00 00 01 */	cmplwi r0, 1
/* 80106198 00101098  91 01 00 08 */	stw r8, 8(r1)
/* 8010619C 0010109C  90 E1 00 0C */	stw r7, 0xc(r1)
/* 801061A0 001010A0  90 C1 00 10 */	stw r6, 0x10(r1)
/* 801061A4 001010A4  90 A1 00 14 */	stw r5, 0x14(r1)
/* 801061A8 001010A8  90 8D 9E 5C */	stw r4, __AXRmtCpuPtr-_SDA_BASE_(r13)
/* 801061AC 001010AC  90 8D 9E 60 */	stw r4, __AXRmtDspPtr-_SDA_BASE_(r13)
/* 801061B0 001010B0  90 6D 9E 64 */	stw r3, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 801061B4 001010B4  40 82 00 1C */	bne lbl_801061D0
/* 801061B8 001010B8  38 9F 08 E0 */	addi r4, r31, 0x8e0
/* 801061BC 001010BC  38 7F 05 E0 */	addi r3, r31, 0x5e0
/* 801061C0 001010C0  38 84 03 00 */	addi r4, r4, 0x300
/* 801061C4 001010C4  38 A1 00 08 */	addi r5, r1, 8
/* 801061C8 001010C8  4B FF EF E5 */	bl __AXNextFrame
/* 801061CC 001010CC  48 00 00 18 */	b lbl_801061E4
lbl_801061D0:
/* 801061D0 001010D0  38 9F 08 E0 */	addi r4, r31, 0x8e0
/* 801061D4 001010D4  38 7F 05 E0 */	addi r3, r31, 0x5e0
/* 801061D8 001010D8  38 84 01 80 */	addi r4, r4, 0x180
/* 801061DC 001010DC  38 A1 00 08 */	addi r5, r1, 8
/* 801061E0 001010E0  4B FF EF CD */	bl __AXNextFrame
lbl_801061E4:
/* 801061E4 001010E4  80 0D 9E 68 */	lwz r0, __AXOutputBufferMode-_SDA_BASE_(r13)
/* 801061E8 001010E8  38 80 00 01 */	li r4, 1
/* 801061EC 001010EC  38 60 00 00 */	li r3, 0
/* 801061F0 001010F0  90 8D 9E 88 */	stw r4, __AXOutDspReady-_SDA_BASE_(r13)
/* 801061F4 001010F4  28 00 00 01 */	cmplwi r0, 1
/* 801061F8 001010F8  90 6D 9E 84 */	stw r3, __AXUserFrameCallback-_SDA_BASE_(r13)
/* 801061FC 001010FC  40 82 00 2C */	bne lbl_80106228
/* 80106200 00101100  80 6D 9E 8C */	lwz r3, __AXAiDmaFrame-_SDA_BASE_(r13)
/* 80106204 00101104  38 1F 08 E0 */	addi r0, r31, 0x8e0
/* 80106208 00101108  38 80 01 80 */	li r4, 0x180
/* 8010620C 0010110C  1C 63 01 80 */	mulli r3, r3, 0x180
/* 80106210 00101110  7C 60 1A 14 */	add r3, r0, r3
/* 80106214 00101114  4B FF D3 CD */	bl AIInitDMA
/* 80106218 00101118  80 6D 9E 8C */	lwz r3, __AXAiDmaFrame-_SDA_BASE_(r13)
/* 8010621C 0010111C  38 03 00 01 */	addi r0, r3, 1
/* 80106220 00101120  90 0D 9E 8C */	stw r0, __AXAiDmaFrame-_SDA_BASE_(r13)
/* 80106224 00101124  48 00 00 1C */	b lbl_80106240
lbl_80106228:
/* 80106228 00101128  80 6D 9E 90 */	lwz r3, __AXOutFrame-_SDA_BASE_(r13)
/* 8010622C 0010112C  38 1F 08 E0 */	addi r0, r31, 0x8e0
/* 80106230 00101130  38 80 01 80 */	li r4, 0x180
/* 80106234 00101134  1C 63 01 80 */	mulli r3, r3, 0x180
/* 80106238 00101138  7C 60 1A 14 */	add r3, r0, r3
/* 8010623C 0010113C  4B FF D3 A5 */	bl AIInitDMA
lbl_80106240:
/* 80106240 00101140  4B FF D4 1D */	bl AIStartDMA
/* 80106244 00101144  38 00 00 00 */	li r0, 0
/* 80106248 00101148  90 0D 9E 58 */	stw r0, __AXExceedCallback-_SDA_BASE_(r13)
/* 8010624C 0010114C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 80106250 00101150  80 01 00 24 */	lwz r0, 0x24(r1)
/* 80106254 00101154  7C 08 03 A6 */	mtlr r0
/* 80106258 00101158  38 21 00 20 */	addi r1, r1, 0x20
/* 8010625C 0010115C  4E 80 00 20 */	blr 

.global AXRegisterCallback
AXRegisterCallback:
/* 80106260 00101160  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 80106264 00101164  7C 08 02 A6 */	mflr r0
/* 80106268 00101168  90 01 00 14 */	stw r0, 0x14(r1)
/* 8010626C 0010116C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 80106270 00101170  93 C1 00 08 */	stw r30, 8(r1)
/* 80106274 00101174  7C 7E 1B 78 */	mr r30, r3
/* 80106278 00101178  83 ED 9E 84 */	lwz r31, __AXUserFrameCallback-_SDA_BASE_(r13)
/* 8010627C 0010117C  4B FE B6 45 */	bl OSDisableInterrupts
/* 80106280 00101180  93 CD 9E 84 */	stw r30, __AXUserFrameCallback-_SDA_BASE_(r13)
/* 80106284 00101184  4B FE B6 65 */	bl OSRestoreInterrupts
/* 80106288 00101188  7F E3 FB 78 */	mr r3, r31
/* 8010628C 0010118C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 80106290 00101190  83 C1 00 08 */	lwz r30, 8(r1)
/* 80106294 00101194  80 01 00 14 */	lwz r0, 0x14(r1)
/* 80106298 00101198  7C 08 03 A6 */	mtlr r0
/* 8010629C 0010119C  38 21 00 10 */	addi r1, r1, 0x10
/* 801062A0 001011A0  4E 80 00 20 */	blr 

.global AXRmtGetSamplesLeft
AXRmtGetSamplesLeft:
/* 801062A4 001011A4  80 6D 9E 60 */	lwz r3, __AXRmtDspPtr-_SDA_BASE_(r13)
/* 801062A8 001011A8  34 63 FF DC */	addic. r3, r3, -36
/* 801062AC 001011AC  40 80 00 0C */	bge lbl_801062B8
/* 801062B0 001011B0  80 0D 9E 64 */	lwz r0, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 801062B4 001011B4  7C 63 02 14 */	add r3, r3, r0
lbl_801062B8:
/* 801062B8 001011B8  80 0D 9E 5C */	lwz r0, __AXRmtCpuPtr-_SDA_BASE_(r13)
/* 801062BC 001011BC  7C 60 18 51 */	subf. r3, r0, r3
/* 801062C0 001011C0  4C 80 00 20 */	bgelr 
/* 801062C4 001011C4  80 0D 9E 64 */	lwz r0, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 801062C8 001011C8  7C 63 02 14 */	add r3, r3, r0
/* 801062CC 001011CC  4E 80 00 20 */	blr 

.global AXRmtGetSamples
AXRmtGetSamples:
/* 801062D0 001011D0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801062D4 001011D4  7C 08 02 A6 */	mflr r0
/* 801062D8 001011D8  90 01 00 14 */	stw r0, 0x14(r1)
/* 801062DC 001011DC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801062E0 001011E0  80 CD 9E 60 */	lwz r6, __AXRmtDspPtr-_SDA_BASE_(r13)
/* 801062E4 001011E4  37 E6 FF DC */	addic. r31, r6, -36
/* 801062E8 001011E8  40 80 00 0C */	bge lbl_801062F4
/* 801062EC 001011EC  80 0D 9E 64 */	lwz r0, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 801062F0 001011F0  7F FF 02 14 */	add r31, r31, r0
lbl_801062F4:
/* 801062F4 001011F4  80 0D 9E 5C */	lwz r0, __AXRmtCpuPtr-_SDA_BASE_(r13)
/* 801062F8 001011F8  7F E0 F8 51 */	subf. r31, r0, r31
/* 801062FC 001011FC  40 80 00 0C */	bge lbl_80106308
/* 80106300 00101200  80 0D 9E 64 */	lwz r0, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 80106304 00101204  7F FF 02 14 */	add r31, r31, r0
lbl_80106308:
/* 80106308 00101208  7C 05 F8 00 */	cmpw r5, r31
/* 8010630C 0010120C  40 81 00 08 */	ble lbl_80106314
/* 80106310 00101210  48 00 00 08 */	b lbl_80106318
lbl_80106314:
/* 80106314 00101214  7C BF 2B 78 */	mr r31, r5
lbl_80106318:
/* 80106318 00101218  1C 03 01 68 */	mulli r0, r3, 0x168
/* 8010631C 0010121C  3C A0 80 43 */	lis r5, __AXRmtOutBuffer@ha
/* 80106320 00101220  80 ED 9E 5C */	lwz r7, __AXRmtCpuPtr-_SDA_BASE_(r13)
/* 80106324 00101224  38 A5 E3 C0 */	addi r5, r5, __AXRmtOutBuffer@l
/* 80106328 00101228  7C A5 02 14 */	add r5, r5, r0
/* 8010632C 0010122C  7F E9 03 A6 */	mtctr r31
/* 80106330 00101230  2C 1F 00 00 */	cmpwi r31, 0
/* 80106334 00101234  40 81 00 2C */	ble lbl_80106360
lbl_80106338:
/* 80106338 00101238  54 E6 08 3C */	slwi r6, r7, 1
/* 8010633C 0010123C  38 E7 00 01 */	addi r7, r7, 1
/* 80106340 00101240  7C 06 2A AE */	lhax r0, r6, r5
/* 80106344 00101244  B0 04 00 00 */	sth r0, 0(r4)
/* 80106348 00101248  38 84 00 02 */	addi r4, r4, 2
/* 8010634C 0010124C  80 0D 9E 64 */	lwz r0, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 80106350 00101250  7C 07 00 00 */	cmpw r7, r0
/* 80106354 00101254  41 80 00 08 */	blt lbl_8010635C
/* 80106358 00101258  38 E0 00 00 */	li r7, 0
lbl_8010635C:
/* 8010635C 0010125C  42 00 FF DC */	bdnz lbl_80106338
lbl_80106360:
/* 80106360 00101260  1C A3 01 68 */	mulli r5, r3, 0x168
/* 80106364 00101264  80 0D 9E 64 */	lwz r0, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 80106368 00101268  3C 60 80 43 */	lis r3, __AXRmtOutBuffer@ha
/* 8010636C 0010126C  54 04 08 3C */	slwi r4, r0, 1
/* 80106370 00101270  38 63 E3 C0 */	addi r3, r3, __AXRmtOutBuffer@l
/* 80106374 00101274  7C 63 2A 14 */	add r3, r3, r5
/* 80106378 00101278  4B FE 7D 8D */	bl DCInvalidateRange
/* 8010637C 0010127C  7F E3 FB 78 */	mr r3, r31
/* 80106380 00101280  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 80106384 00101284  80 01 00 14 */	lwz r0, 0x14(r1)
/* 80106388 00101288  7C 08 03 A6 */	mtlr r0
/* 8010638C 0010128C  38 21 00 10 */	addi r1, r1, 0x10
/* 80106390 00101290  4E 80 00 20 */	blr 

.global AXRmtAdvancePtr
AXRmtAdvancePtr:
/* 80106394 00101294  80 8D 9E 60 */	lwz r4, __AXRmtDspPtr-_SDA_BASE_(r13)
/* 80106398 00101298  34 84 FF DC */	addic. r4, r4, -36
/* 8010639C 0010129C  40 80 00 0C */	bge lbl_801063A8
/* 801063A0 001012A0  80 0D 9E 64 */	lwz r0, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 801063A4 001012A4  7C 84 02 14 */	add r4, r4, r0
lbl_801063A8:
/* 801063A8 001012A8  80 0D 9E 5C */	lwz r0, __AXRmtCpuPtr-_SDA_BASE_(r13)
/* 801063AC 001012AC  7C 80 20 51 */	subf. r4, r0, r4
/* 801063B0 001012B0  40 80 00 0C */	bge lbl_801063BC
/* 801063B4 001012B4  80 0D 9E 64 */	lwz r0, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 801063B8 001012B8  7C 84 02 14 */	add r4, r4, r0
lbl_801063BC:
/* 801063BC 001012BC  7C 03 20 00 */	cmpw r3, r4
/* 801063C0 001012C0  40 81 00 08 */	ble lbl_801063C8
/* 801063C4 001012C4  7C 83 23 78 */	mr r3, r4
lbl_801063C8:
/* 801063C8 001012C8  80 0D 9E 5C */	lwz r0, __AXRmtCpuPtr-_SDA_BASE_(r13)
/* 801063CC 001012CC  80 8D 9E 64 */	lwz r4, __AXRmtBuffLen-_SDA_BASE_(r13)
/* 801063D0 001012D0  7C 00 1A 14 */	add r0, r0, r3
/* 801063D4 001012D4  7C 00 20 00 */	cmpw r0, r4
/* 801063D8 001012D8  90 0D 9E 5C */	stw r0, __AXRmtCpuPtr-_SDA_BASE_(r13)
/* 801063DC 001012DC  4D 80 00 20 */	bltlr 
/* 801063E0 001012E0  7C 04 00 50 */	subf r0, r4, r0
/* 801063E4 001012E4  90 0D 9E 5C */	stw r0, __AXRmtCpuPtr-_SDA_BASE_(r13)
/* 801063E8 001012E8  4E 80 00 20 */	blr 
